2025-06-24 14:47:02 | INFO     | Frontend | info:76 | Starting QA-Suite Frontend | Context: {"streamlit_version": "1.24.0", "python_version": "3.12.3 (main, May 26 2025, 18:50:19) [GCC 13.3.0]"}
2025-06-24 14:47:02 | INFO     | Frontend | info:76 | JS file uploaded and processed | Context: {"filename": "digitree.js", "file_size": 1938, "content_length": 1938}
2025-06-24 14:47:02 | INFO     | Frontend | info:76 | Making API call to run script | Context: {"script_length": 2343}
2025-06-24 14:47:31 | ERROR    | Frontend | error:94 | Failed to run script | Context: {"status_code": 400, "response_text": "{\n  \"details\": \"No report generated.\",\n  \"error\": \"Test execution failed\",\n  \"healing_attempts\": [],\n  \"stderr\": \"\",\n  \"stdout\": \"============================= test session starts ==============================\\nplatform linux -- Python 3.12.3, pytest-8.4.0, pluggy-1.6.0\\nrootdir: /tmp/tmpjusf8lxz\\nplugins: metadata-3.1.1, anyio-4.9.0, json-report-1.5.0\\ncollected 1 item\\n\\ntest_script.py ERROR in test_complete_end_to_end_workflow: Dumping DOM for analysis.\\nCRITICAL: Failed to dump DOM: Page.content: Target page, context or browser has been closed\\nF\\n\\n=================================== FAILURES ===================================\\n______________________ test_complete_end_to_end_workflow _______________________\\n\\npage = <Page url='https://digitreetest.shorthills.ai/dashboard/upload'>\\n\\n    def test_complete_end_to_end_workflow(page):\\n    \\n        try:\\n         # Load \\\"https://digitreetest.shorthills.ai/auth/login\\\"\\n            page.goto(\\\"https://digitreetest.shorthills.ai/auth/login\\\")\\n    \\n            # Resize window to 1850 x 966\\n            page.set_viewport_size({\\\"width\\\": 1850, \\\"height\\\": 966})\\n    \\n            # Fill \\\"abhinax07\\\" on <input> .outlined-input-container > .ant-input\\n            page.locator(\\\".outlined-input-container > .ant-input\\\").fill(\\\"abhinax07\\\")\\n    \\n            # Click on <input> .ant-input-affix-wrapper > .ant-input\\n            page.locator(\\\".ant-input-affix-wrapper > .ant-input\\\").click()\\n    \\n            # Fill \\\"Megatron235#\\\" on <input> .ant-input-affix-wrapper > .ant-input\\n            page.locator(\\\".ant-input-affix-wrapper > .ant-input\\\").fill(\\\"Megatron235#\\\")\\n    \\n            # Click on <button> \\\"Sign In\\\"\\n            with page.expect_navigation():\\n                page.locator(\\\".py-3\\\").click()\\n    \\n            # Click on <span> \\\"+ Upload Image\\\"\\n            with page.expect_navigation():\\n                page.get_by_text(\\\"+ Upload Image\\\").click()\\n    \\n            # Click on <label> \\\"Browse\\\"\\n            page.locator(\\\".inline-block\\\").click()\\n    \\n            # Fill \\\"C:\\\\\\\\fakepath\\\\\\\\i... on <input> [data-testid=\\\"file-input\\\"]\\n            page.get_by_test_id(\\\"file-input\\\").set_input_files(\\\"img_132.jpg\\\")\\n    \\n            # Click on <button> \\\"Submit\\\"\\n            with page.expect_navigation():\\n                page.get_by_test_id(\\\"upload-button\\\").click()\\n    \\n            # Click on <span> .hover\\\\:brightness-90:nth-child(1) > .ant-btn-icon\\n            page.locator(\\\".hover\\\\\\\\:brightness-90:nth-child(1) > .ant-btn-icon\\\").click()\\n    \\n            # Click on <span> \\\"View Tree\\\"\\n            page.get_by_text(\\\"View Tree\\\").click()\\n    \\n            # Click on <span> \\\"abhinax07\\\"\\n            page.get_by_text(\\\"abhinax07\\\").click()\\n    \\n            # Click on <span> \\\"Log Out\\\"\\n            page.get_by_text(\\\"Log Out\\\").click()\\n    \\n            # Click on <button> \\\"Yes\\\"\\n            with page.expect_navigation():\\n                page.locator(\\\".custom-alert-confirm\\\").click()\\n    \\n            # Click on <a> [aria-label=\\\"Close\\\"]\\n            page.locator(\\\"[aria-label=\\\\\\\"Close\\\\\\\"]\\\").click()\\n        except Exception as e:\\n            print(f\\\"ERROR in test_complete_end_to_end_workflow: Dumping DOM for analysis.\\\")\\n            try:\\n                with open(r'/tmp/tmpjusf8lxz/dom_on_failure.html', 'w', encoding='utf-8') as f:\\n                    f.write(page.content())\\n                print(f\\\"DOM content successfully dumped to /tmp/tmpjusf8lxz/dom_on_failure.html\\\")\\n            except Exception as dump_error:\\n                print(f\\\"CRITICAL: Failed to dump DOM: {dump_error}\\\")\\n>           raise e\\n\\ntest_script.py:83: \\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \\ntest_script.py:51: in test_complete_end_to_end_workflow\\n    page.get_by_test_id(\\\"file-input\\\").set_input_files(\\\"img_132.jpg\\\")\\n/home/shtlp_0133/Desktop/Dev_Code_Test_suite/venv/lib/python3.12/site-packages/playwright/sync_api/_generated.py:17580: in set_input_files\\n    self._sync(\\n/home/shtlp_0133/Desktop/Dev_Code_Test_suite/venv/lib/python3.12/site-packages/playwright/_impl/_locator.py:598: in set_input_files\\n    return await self._frame.set_input_files(\\n/home/shtlp_0133/Desktop/Dev_Code_Test_suite/venv/lib/python3.12/site-packages/playwright/_impl/_frame.py:699: in set_input_files\\n    await self._channel.send(\\n/home/shtlp_0133/Desktop/Dev_Code_Test_suite/venv/lib/python3.12/site-packages/playwright/_impl/_connection.py:61: in send\\n    return await self._connection.wrap_api_call(\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \\n\\nself = <playwright._impl._connection.Connection object at 0x751c53d9f140>\\ncb = <function Channel.send.<locals>.<lambda> at 0x751c5317e3e0>\\nis_internal = False\\n\\n    async def wrap_api_call(\\n        self, cb: Callable[[], Any], is_internal: bool = False\\n    ) -> Any:\\n        if self._api_zone.get():\\n            return await cb()\\n        task = asyncio.current_task(self._loop)\\n        st: List[inspect.FrameInfo] = getattr(task, \\\"__pw_stack__\\\", inspect.stack())\\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\\n        self._api_zone.set(parsed_st)\\n        try:\\n            return await cb()\\n        except Exception as error:\\n>           raise rewrite_error(error, f\\\"{parsed_st['apiName']}: {error}\\\") from None\\nE           playwright._impl._errors.TargetClosedError: Locator.set_input_files: Target page, context or browser has been closed\\nE           Call log:\\nE             - waiting for get_by_test_id(\\\"file-input\\\")\\nE               15 \\u00d7 locator resolved to <input multiple type=\\\"file\\\" id=\\\"fileInput\\\" class=\\\"hidden\\\" data-testid=\\\"file-input\\\" accept=\\\"image/jpeg,image/png,application/pdf\\\"/>\\n\\n/home/shtlp_0133/Desktop/Dev_Code_Test_suite/venv/lib/python3.12/site-packages/playwright/_impl/_connection.py:528: TargetClosedError\\n=========================== short test summary info ============================\\nFAILED test_script.py::test_complete_end_to_end_workflow - playwright._impl._...\\n============================== 1 failed in 28.38s ==============================\\n\"\n}\n"}
2025-06-24 14:47:31 | ERROR    | Frontend | error:94 | Script execution returned error | Context: {"error": "Failed to run script", "has_logs": true}
2025-06-24 14:47:31 | INFO     | Frontend | info:76 | User completed all workflow steps | Context: {"final_step": 6, "total_steps": 7}
