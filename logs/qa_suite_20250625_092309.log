2025-06-25 09:23:09 | INFO     | Frontend | info:76 | Starting QA-Suite Frontend | Context: {"streamlit_version": "1.24.0", "python_version": "3.12.3 (main, Jun 18 2025, 17:59:45) [GCC 13.3.0]"}
2025-06-25 09:23:09 | INFO     | Frontend | info:76 | Initialized session state | Context: {"current_step": 0}
2025-06-25 09:25:08 | INFO     | QA-Suite | user_action:150 | USER ACTION: entered_website_url | Context: {"url": "https://geneconnectdoctor.shorthills.ai/login"}
2025-06-25 09:25:08 | INFO     | QA-Suite | step:108 | STEP [1/7] Enter Website URL | Context: {"url": "https://geneconnectdoctor.shorthills.ai/login"}
2025-06-25 09:25:13 | INFO     | QA-Suite | user_action:150 | USER ACTION: uploaded_js_file | Context: {"filename": "geneconnect 2 copy.js", "file_size": 4672}
2025-06-25 09:25:13 | INFO     | QA-Suite | step:108 | STEP [2/7] Upload JS File | Context: {"filename": "geneconnect 2 copy.js", "file_size": 4672}
2025-06-25 09:25:21 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_test_ideas | Context: {"functionality": "Test cases for login"}
2025-06-25 09:25:34 | INFO     | QA-Suite | api_call:124 | API POST /generate_test_ideas | Status: 200 | Time: 12.75s | Context: {"functionality": "Test cases for login", "js_content_length": 4672}
2025-06-25 09:25:34 | INFO     | QA-Suite | performance:157 | PERFORMANCE test_ideas_generation_ui | Duration: 12.75s | Context: {"functionality": "Test cases for login", "test_ideas_count": 20}
2025-06-25 09:25:34 | INFO     | QA-Suite | step:108 | STEP [3/7] Generate Test Ideas | Context: {"functionality": "Test cases for login", "test_ideas_count": 20}
2025-06-25 09:25:51 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_full_flow_script
2025-06-25 09:25:57 | INFO     | QA-Suite | user_action:150 | USER ACTION: entered_website_url | Context: {"url": "https://geneconnectdoctor.shorthills.ai/login"}
2025-06-25 09:25:57 | INFO     | QA-Suite | step:108 | STEP [1/7] Enter Website URL | Context: {"url": "https://geneconnectdoctor.shorthills.ai/login"}
2025-06-25 09:26:03 | INFO     | QA-Suite | user_action:150 | USER ACTION: uploaded_js_file | Context: {"filename": "digitree_full.js", "file_size": 4046}
2025-06-25 09:26:03 | INFO     | QA-Suite | step:108 | STEP [2/7] Upload JS File | Context: {"filename": "digitree_full.js", "file_size": 4046}
2025-06-25 09:26:05 | INFO     | QA-Suite | api_call:124 | API POST /generate_full_flow_script | Status: 200 | Time: 14.90s | Context: {"website_url": "https://geneconnectdoctor.shorthills.ai/login"}
2025-06-25 09:26:10 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_test_ideas | Context: {"functionality": "Just check login sanity"}
2025-06-25 09:26:20 | INFO     | QA-Suite | api_call:124 | API POST /generate_test_ideas | Status: 200 | Time: 9.78s | Context: {"functionality": "Just check login sanity", "js_content_length": 4046}
2025-06-25 09:26:20 | INFO     | QA-Suite | performance:157 | PERFORMANCE test_ideas_generation_ui | Duration: 9.78s | Context: {"functionality": "Just check login sanity", "test_ideas_count": 20}
2025-06-25 09:26:20 | INFO     | QA-Suite | step:108 | STEP [3/7] Generate Test Ideas | Context: {"functionality": "Just check login sanity", "test_ideas_count": 20}
2025-06-25 09:33:22 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_script | Context: {"selected_tests_count": 20, "selected_tests": ["Verify successful login with valid username and password.", "Validate redirection to dashboard after successful login.", "Test navigation to 'Edit Tree' page from dashboard.", "Verify input fields are editable on the 'Edit Tree' page.", "Validate data entry in multiple text fields on 'Edit Tree' form.", "Test date selection functionality using the date picker.", "Verify 'Save' button functionality on 'Edit Tree' page.", "Validate 'OK' button click on success confirmation alert.", "Test navigation to 'Home' page from 'Edit Tree' section.", "Verify 'View Tree' button navigates to the correct page.", "Validate image ID search functionality on 'View Tree' page.", "Test successful logout from the application.", "Verify redirection to login page after logout confirmation.", "Validate initial load of the login page URL.", "Test username input field accepts valid characters.", "Verify password input field accepts valid characters.", "Validate 'Sign In' button is clickable and initiates login.", "Test the application's behavior after viewport size adjustment.", "Verify the presence of key navigation elements post-login (e.g., Home, Edit Tree).", "End-to-end sanity check: Login, basic interaction, and Logout."]}
2025-06-25 09:33:44 | INFO     | QA-Suite | api_call:124 | API POST /generate_script | Status: 200 | Time: 21.45s | Context: {"website_url": "https://geneconnectdoctor.shorthills.ai/login", "selected_tests_count": 20}
2025-06-25 09:33:44 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_generation_ui | Duration: 21.45s | Context: {"selected_tests_count": 20, "script_length": 5971}
2025-06-25 09:33:44 | INFO     | QA-Suite | step:108 | STEP [4/7] Generate Script | Context: {"selected_tests_count": 20, "script_length": 5971}
2025-06-25 09:33:51 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_run_script | Context: {"script_length": 5971}
2025-06-25 10:25:58 | INFO     | QA-Suite | user_action:150 | USER ACTION: entered_website_url | Context: {"url": "https://geneconnectdoctor.shorthills.ai/login"}
2025-06-25 10:25:58 | INFO     | QA-Suite | step:108 | STEP [1/7] Enter Website URL | Context: {"url": "https://geneconnectdoctor.shorthills.ai/login"}
2025-06-25 10:26:04 | INFO     | QA-Suite | user_action:150 | USER ACTION: uploaded_js_file | Context: {"filename": "geneconnectCompFlow.js", "file_size": 3790}
2025-06-25 10:26:04 | INFO     | QA-Suite | step:108 | STEP [2/7] Upload JS File | Context: {"filename": "geneconnectCompFlow.js", "file_size": 3790}
2025-06-25 10:26:17 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_test_ideas | Context: {"functionality": "Generate test cases for Login only"}
2025-06-25 10:26:27 | INFO     | QA-Suite | api_call:124 | API POST /generate_test_ideas | Status: 200 | Time: 9.94s | Context: {"functionality": "Generate test cases for Login only", "js_content_length": 3790}
2025-06-25 10:26:27 | INFO     | QA-Suite | performance:157 | PERFORMANCE test_ideas_generation_ui | Duration: 9.94s | Context: {"functionality": "Generate test cases for Login only", "test_ideas_count": 20}
2025-06-25 10:26:27 | INFO     | QA-Suite | step:108 | STEP [3/7] Generate Test Ideas | Context: {"functionality": "Generate test cases for Login only", "test_ideas_count": 20}
2025-06-25 10:26:35 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_full_flow_script
2025-06-25 10:26:57 | INFO     | QA-Suite | api_call:124 | API POST /generate_full_flow_script | Status: 200 | Time: 22.78s | Context: {"website_url": "https://geneconnectdoctor.shorthills.ai/login"}
2025-06-25 10:26:57 | INFO     | QA-Suite | performance:157 | PERFORMANCE full_flow_script_generation_ui | Duration: 22.78s | Context: {"script_length": 4337}
2025-06-25 10:26:57 | INFO     | QA-Suite | step:108 | STEP [4/7] Generate Full Flow Script | Context: {"script_length": 4337}
2025-06-25 10:27:09 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_run_script | Context: {"script_length": 4337}
2025-06-25 10:29:52 | INFO     | QA-Suite | api_call:124 | API POST /run_script | Status: 200 | Time: 162.08s | Context: {"script_length": 4337}
2025-06-25 10:29:52 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_execution_ui | Duration: 162.08s | Context: {"script_length": 4337}
2025-06-25 10:29:52 | INFO     | QA-Suite | step:108 | STEP [6/7] Run Tests | Context: {"logs_count": 1, "stats": {"failed": 0, "passed": 1, "total": 1}}
2025-06-25 10:29:52 | INFO     | QA-Suite | user_action:150 | USER ACTION: downloaded_results | Context: {"script_length": 4337, "logs_count": 1}
2025-06-25 10:29:52 | INFO     | QA-Suite | step:108 | STEP [7/7] Download Results | Context: {"script_length": 4337, "logs_count": 1}
2025-06-25 10:30:02 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_script | Context: {"selected_tests_count": 20, "selected_tests": ["Verify successful login with valid username and password.", "Verify login failure with invalid username and valid password.", "Verify login failure with valid username and invalid password.", "Verify login failure with empty username and valid password.", "Verify login failure with valid username and empty password.", "Verify login failure with empty username and empty password.", "Verify login failure with invalid username and invalid password.", "Verify error message displayed for invalid login credentials.", "Verify error message displayed for empty username field.", "Verify error message displayed for empty password field.", "Verify password field masks input characters.", "Verify presence of username input field on login page.", "Verify presence of password input field on login page.", "Verify presence of submit button on login page.", "Verify navigation to dashboard/home page after successful login.", "Verify user remains on login page after failed login attempt.", "Verify login functionality using 'Enter' key after filling credentials.", "Verify login page loads correctly with all elements.", "Verify login with credentials containing leading/trailing spaces (if trimmed).", "Verify login failure after multiple incorrect attempts (if lockout policy exists)."]}
2025-06-25 10:30:44 | INFO     | QA-Suite | api_call:124 | API POST /generate_script | Status: 200 | Time: 42.73s | Context: {"website_url": "https://geneconnectdoctor.shorthills.ai/login", "selected_tests_count": 20}
2025-06-25 10:30:44 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_generation_ui | Duration: 42.73s | Context: {"selected_tests_count": 20, "script_length": 10510}
2025-06-25 10:30:44 | INFO     | QA-Suite | user_action:150 | USER ACTION: downloaded_results | Context: {"script_length": 10510, "logs_count": 1}
2025-06-25 10:30:44 | INFO     | QA-Suite | step:108 | STEP [7/7] Download Results | Context: {"script_length": 10510, "logs_count": 1}
2025-06-25 10:30:51 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_run_script | Context: {"script_length": 10510}
2025-06-25 10:31:23 | INFO     | QA-Suite | api_call:124 | API POST /run_script | Status: 400 | Time: 31.93s | Context: {"script_length": 10510}
2025-06-25 10:31:23 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_execution_ui | Duration: 31.93s | Context: {"script_length": 10510}
2025-06-25 10:31:23 | INFO     | QA-Suite | user_action:150 | USER ACTION: downloaded_results | Context: {"script_length": 10510, "logs_count": 1}
2025-06-25 10:31:23 | INFO     | QA-Suite | step:108 | STEP [7/7] Download Results | Context: {"script_length": 10510, "logs_count": 1}
2025-06-25 10:32:15 | INFO     | QA-Suite | user_action:150 | USER ACTION: entered_website_url | Context: {"url": "https://geneconnectdoctor.shorthills.ai/login"}
2025-06-25 10:32:15 | INFO     | QA-Suite | step:108 | STEP [1/7] Enter Website URL | Context: {"url": "https://geneconnectdoctor.shorthills.ai/login"}
2025-06-25 10:32:19 | INFO     | QA-Suite | user_action:150 | USER ACTION: uploaded_js_file | Context: {"filename": "geneconnectCompFlow.js", "file_size": 3790}
2025-06-25 10:32:19 | INFO     | QA-Suite | step:108 | STEP [2/7] Upload JS File | Context: {"filename": "geneconnectCompFlow.js", "file_size": 3790}
2025-06-25 10:32:29 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_test_ideas | Context: {"functionality": "Generate test cases for Login"}
2025-06-25 10:32:35 | INFO     | QA-Suite | api_call:124 | API POST /generate_test_ideas | Status: 200 | Time: 6.56s | Context: {"functionality": "Generate test cases for Login", "js_content_length": 3790}
2025-06-25 10:32:35 | INFO     | QA-Suite | performance:157 | PERFORMANCE test_ideas_generation_ui | Duration: 6.56s | Context: {"functionality": "Generate test cases for Login", "test_ideas_count": 20}
2025-06-25 10:32:35 | INFO     | QA-Suite | step:108 | STEP [3/7] Generate Test Ideas | Context: {"functionality": "Generate test cases for Login", "test_ideas_count": 20}
2025-06-25 10:32:37 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_script | Context: {"selected_tests_count": 20, "selected_tests": ["Verify successful login with valid username and password.", "Verify login fails with invalid username and valid password.", "Verify login fails with valid username and invalid password.", "Verify login fails with invalid username and invalid password.", "Verify login fails with empty username field.", "Verify login fails with empty password field.", "Verify login fails with both username and password fields empty.", "Verify appropriate error message is displayed for invalid credentials.", "Verify appropriate error message is displayed for empty username.", "Verify appropriate error message is displayed for empty password.", "Verify password field masks input characters.", "Verify username field accepts alphanumeric characters.", "Verify password field accepts alphanumeric and special characters.", "Verify login page loads correctly with all UI elements visible.", "Verify focus shifts correctly between username, password, and submit button using Tab key.", "Verify login functionality using Enter key after filling credentials.", "Verify login fails with SQL injection attempt in username field.", "Verify login fails with SQL injection attempt in password field.", "Verify login fails with excessively long username input.", "Verify login fails with excessively long password input."]}
2025-06-25 10:33:19 | INFO     | QA-Suite | api_call:124 | API POST /generate_script | Status: 200 | Time: 41.59s | Context: {"website_url": "https://geneconnectdoctor.shorthills.ai/login", "selected_tests_count": 20}
2025-06-25 10:33:19 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_generation_ui | Duration: 41.59s | Context: {"selected_tests_count": 20, "script_length": 8056}
2025-06-25 10:33:19 | INFO     | QA-Suite | step:108 | STEP [4/7] Generate Script | Context: {"selected_tests_count": 20, "script_length": 8056}
2025-06-25 10:33:46 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_run_script | Context: {"script_length": 8056}
2025-06-25 10:34:44 | INFO     | QA-Suite | api_call:124 | API POST /run_script | Status: 400 | Time: 58.45s | Context: {"script_length": 8056}
2025-06-25 11:42:11 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_run_script | Context: {"script_length": 8056}
2025-06-25 11:42:44 | INFO     | QA-Suite | api_call:124 | API POST /run_script | Status: 400 | Time: 32.32s | Context: {"script_length": 8056}
2025-06-25 11:42:44 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_execution_ui | Duration: 32.32s | Context: {"script_length": 8056}
2025-06-25 11:42:44 | INFO     | QA-Suite | step:108 | STEP [6/7] Run Tests | Context: {"logs_count": 1, "stats": {"passed": 0, "failed": 0, "total": 0}}
2025-06-25 11:42:44 | INFO     | QA-Suite | user_action:150 | USER ACTION: downloaded_results | Context: {"script_length": 8056, "logs_count": 1}
2025-06-25 11:42:44 | INFO     | QA-Suite | step:108 | STEP [7/7] Download Results | Context: {"script_length": 8056, "logs_count": 1}
2025-06-25 11:47:15 | INFO     | QA-Suite | user_action:150 | USER ACTION: entered_website_url | Context: {"url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/"}
2025-06-25 11:47:15 | INFO     | QA-Suite | step:108 | STEP [1/7] Enter Website URL | Context: {"url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/"}
2025-06-25 11:47:24 | INFO     | QA-Suite | user_action:150 | USER ACTION: uploaded_js_file | Context: {"filename": "jump_full_flow.js", "file_size": 10432}
2025-06-25 11:47:24 | INFO     | QA-Suite | step:108 | STEP [2/7] Upload JS File | Context: {"filename": "jump_full_flow.js", "file_size": 10432}
2025-06-25 11:47:33 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_test_ideas | Context: {"functionality": "Login and OTP"}
2025-06-25 11:47:52 | INFO     | QA-Suite | api_call:124 | API POST /generate_test_ideas | Status: 200 | Time: 18.65s | Context: {"functionality": "Login and OTP", "js_content_length": 10432}
2025-06-25 11:47:52 | INFO     | QA-Suite | performance:157 | PERFORMANCE test_ideas_generation_ui | Duration: 18.65s | Context: {"functionality": "Login and OTP", "test_ideas_count": 20}
2025-06-25 11:47:52 | INFO     | QA-Suite | step:108 | STEP [3/7] Generate Test Ideas | Context: {"functionality": "Login and OTP", "test_ideas_count": 20}
2025-06-25 11:47:54 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_script | Context: {"selected_tests_count": 20, "selected_tests": ["Verify successful login with valid credentials and T&C accepted.", "Verify login failure with invalid email address.", "Verify login failure with incorrect password.", "Verify login failure with empty email field.", "Verify login failure with empty password field.", "Verify login failure with both email and password fields empty.", "Verify login failure when Terms & Conditions checkbox is not accepted.", "Verify login with email containing leading/trailing spaces is handled correctly.", "Verify login with password containing leading/trailing spaces is handled correctly.", "Verify appropriate error messages are displayed for invalid login attempts.", "Verify navigation to OTP verification page after successful login credentials submission.", "Verify 'Forgot Password' link navigates to the correct recovery page.", "Verify successful OTP verification with a valid 5-digit code.", "Verify OTP verification failure with an invalid 5-digit code.", "Verify OTP verification failure when less than 5 digits are entered.", "Verify OTP verification failure when non-numeric characters are entered.", "Verify OTP verification failure with all OTP fields left empty.", "Verify 'Resend OTP' button functionality and new OTP generation.", "Verify OTP input fields restrict input to only numeric characters.", "Verify OTP expiration and subsequent error message or redirect."]}
2025-06-25 11:48:42 | INFO     | QA-Suite | api_call:124 | API POST /generate_script | Status: 200 | Time: 47.87s | Context: {"website_url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/", "selected_tests_count": 20}
2025-06-25 11:48:42 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_generation_ui | Duration: 47.87s | Context: {"selected_tests_count": 20, "script_length": 15557}
2025-06-25 11:48:42 | INFO     | QA-Suite | step:108 | STEP [4/7] Generate Script | Context: {"selected_tests_count": 20, "script_length": 15557}
2025-06-25 11:48:47 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_run_script | Context: {"script_length": 15557}
2025-06-25 11:49:19 | INFO     | QA-Suite | api_call:124 | API POST /run_script | Status: 400 | Time: 32.54s | Context: {"script_length": 15557}
2025-06-25 11:49:19 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_execution_ui | Duration: 32.54s | Context: {"script_length": 15557}
2025-06-25 11:49:19 | INFO     | QA-Suite | step:108 | STEP [6/7] Run Tests | Context: {"logs_count": 1, "stats": {"passed": 0, "failed": 0, "total": 0}}
2025-06-25 11:49:19 | INFO     | QA-Suite | user_action:150 | USER ACTION: downloaded_results | Context: {"script_length": 15557, "logs_count": 1}
2025-06-25 11:49:19 | INFO     | QA-Suite | step:108 | STEP [7/7] Download Results | Context: {"script_length": 15557, "logs_count": 1}
2025-06-25 11:54:15 | INFO     | QA-Suite | user_action:150 | USER ACTION: entered_website_url | Context: {"url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/"}
2025-06-25 11:54:15 | INFO     | QA-Suite | step:108 | STEP [1/7] Enter Website URL | Context: {"url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/"}
2025-06-25 11:54:20 | INFO     | QA-Suite | user_action:150 | USER ACTION: uploaded_js_file | Context: {"filename": "jump_full_flow.js", "file_size": 10432}
2025-06-25 11:54:20 | INFO     | QA-Suite | step:108 | STEP [2/7] Upload JS File | Context: {"filename": "jump_full_flow.js", "file_size": 10432}
2025-06-25 11:54:34 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_test_ideas | Context: {"functionality": "For login and OTP"}
2025-06-25 11:54:44 | INFO     | QA-Suite | api_call:124 | API POST /generate_test_ideas | Status: 200 | Time: 9.26s | Context: {"functionality": "For login and OTP", "js_content_length": 10432}
2025-06-25 11:54:44 | INFO     | QA-Suite | performance:157 | PERFORMANCE test_ideas_generation_ui | Duration: 9.26s | Context: {"functionality": "For login and OTP", "test_ideas_count": 20}
2025-06-25 11:54:44 | INFO     | QA-Suite | step:108 | STEP [3/7] Generate Test Ideas | Context: {"functionality": "For login and OTP", "test_ideas_count": 20}
2025-06-25 11:55:23 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_script | Context: {"selected_tests_count": 20, "selected_tests": ["Verify successful login with valid credentials and accepted Terms & Conditions.", "Verify login failure with invalid email format.", "Verify login failure with a non-existent company email.", "Verify login failure with a correct company email and incorrect password.", "Verify login failure when the company email field is left empty.", "Verify login failure when the password field is left empty.", "Verify login failure when both company email and password fields are empty.", "Verify login failure when Terms & Conditions checkbox is not accepted.", "Verify login handles company email with leading/trailing spaces correctly.", "Verify login handles password with leading/trailing spaces correctly.", "Verify appropriate error messages are displayed for invalid login attempts.", "Verify navigation to the login page upon direct URL access.", "Verify successful OTP verification with a valid 5-digit code.", "Verify OTP verification failure with an invalid 5-digit code.", "Verify OTP verification failure when less than 5 digits are entered.", "Verify OTP verification failure when non-numeric characters are entered.", "Verify OTP input fields restrict input to exactly 5 digits.", "Verify appropriate error messages are displayed for invalid OTP attempts.", "Verify 'Resend OTP' functionality (if available) after a timeout period.", "Verify all UI elements and instructions on the OTP verification page are displayed correctly."]}
2025-06-25 11:56:35 | INFO     | QA-Suite | api_call:124 | API POST /generate_script | Status: 200 | Time: 72.29s | Context: {"website_url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/", "selected_tests_count": 20}
2025-06-25 11:56:35 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_generation_ui | Duration: 72.29s | Context: {"selected_tests_count": 20, "script_length": 18382}
2025-06-25 11:56:35 | INFO     | QA-Suite | step:108 | STEP [4/7] Generate Script | Context: {"selected_tests_count": 20, "script_length": 18382}
2025-06-25 11:57:03 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_run_script | Context: {"script_length": 18382}
2025-06-25 11:57:21 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_execution_ui | Duration: 17.78s | Context: {"script_length": 18382}
2025-06-25 11:57:21 | INFO     | QA-Suite | step:108 | STEP [6/7] Run Tests | Context: {"logs_count": 1, "stats": {"passed": 0, "failed": 0, "total": 0}}
2025-06-25 11:57:21 | INFO     | QA-Suite | user_action:150 | USER ACTION: downloaded_results | Context: {"script_length": 18382, "logs_count": 1}
2025-06-25 11:57:21 | INFO     | QA-Suite | step:108 | STEP [7/7] Download Results | Context: {"script_length": 18382, "logs_count": 1}
2025-06-25 11:58:01 | INFO     | QA-Suite | user_action:150 | USER ACTION: downloaded_results | Context: {"script_length": 18382, "logs_count": 1}
2025-06-25 11:58:01 | INFO     | QA-Suite | step:108 | STEP [7/7] Download Results | Context: {"script_length": 18382, "logs_count": 1}
2025-06-25 12:11:47 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_run_script | Context: {"script_length": 18382}
2025-06-25 12:12:20 | INFO     | QA-Suite | api_call:124 | API POST /run_script | Status: 400 | Time: 32.75s | Context: {"script_length": 18382}
2025-06-25 12:12:20 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_execution_ui | Duration: 32.75s | Context: {"script_length": 18382}
2025-06-25 12:12:20 | INFO     | QA-Suite | user_action:150 | USER ACTION: downloaded_results | Context: {"script_length": 18382, "logs_count": 1}
2025-06-25 12:12:20 | INFO     | QA-Suite | step:108 | STEP [7/7] Download Results | Context: {"script_length": 18382, "logs_count": 1}
2025-06-25 12:17:38 | INFO     | QA-Suite | user_action:150 | USER ACTION: entered_website_url | Context: {"url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/"}
2025-06-25 12:17:38 | INFO     | QA-Suite | step:108 | STEP [1/7] Enter Website URL | Context: {"url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/"}
2025-06-25 12:17:42 | INFO     | QA-Suite | user_action:150 | USER ACTION: uploaded_js_file | Context: {"filename": "jump_full_flow.js", "file_size": 10432}
2025-06-25 12:17:42 | INFO     | QA-Suite | step:108 | STEP [2/7] Upload JS File | Context: {"filename": "jump_full_flow.js", "file_size": 10432}
2025-06-25 12:17:47 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_test_ideas | Context: {"functionality": "For login"}
2025-06-25 12:17:54 | INFO     | QA-Suite | api_call:124 | API POST /generate_test_ideas | Status: 200 | Time: 7.72s | Context: {"functionality": "For login", "js_content_length": 10432}
2025-06-25 12:17:54 | INFO     | QA-Suite | performance:157 | PERFORMANCE test_ideas_generation_ui | Duration: 7.72s | Context: {"functionality": "For login", "test_ideas_count": 20}
2025-06-25 12:17:54 | INFO     | QA-Suite | step:108 | STEP [3/7] Generate Test Ideas | Context: {"functionality": "For login", "test_ideas_count": 20}
2025-06-25 12:17:57 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_script | Context: {"selected_tests_count": 20, "selected_tests": ["Verify successful login with valid credentials and accepted Terms & Conditions.", "Verify login failure with invalid company email.", "Verify login failure with invalid password.", "Verify login failure with both invalid company email and password.", "Verify login failure when company email field is left empty.", "Verify login failure when password field is left empty.", "Verify login failure when both company email and password fields are empty.", "Verify login failure when Terms & Conditions checkbox is not checked.", "Verify error message displayed for invalid company email.", "Verify error message displayed for invalid password.", "Verify error message displayed when Terms & Conditions are not accepted.", "Verify password field masks input characters correctly.", "Verify navigation to OTP verification page after successful credential submission.", "Verify login page loads correctly with all input fields and buttons visible.", "Verify input fields accept alphanumeric characters for email and password.", "Verify login failure with a non-existent company email.", "Verify login failure with a valid email but incorrect password.", "Verify login failure with a valid password but incorrect email.", "Verify login failure with company email containing leading or trailing spaces.", "Verify login failure with password containing leading or trailing spaces."]}
2025-06-25 12:18:27 | INFO     | QA-Suite | api_call:124 | API POST /generate_script | Status: 200 | Time: 30.03s | Context: {"website_url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/", "selected_tests_count": 20}
2025-06-25 12:18:27 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_generation_ui | Duration: 30.03s | Context: {"selected_tests_count": 20, "script_length": 15590}
2025-06-25 12:18:27 | INFO     | QA-Suite | step:108 | STEP [4/7] Generate Script | Context: {"selected_tests_count": 20, "script_length": 15590}
2025-06-25 12:33:14 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_run_script | Context: {"script_length": 15590}
2025-06-25 12:33:46 | INFO     | QA-Suite | api_call:124 | API POST /run_script | Status: 400 | Time: 31.90s | Context: {"script_length": 15590}
2025-06-25 12:33:46 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_execution_ui | Duration: 31.90s | Context: {"script_length": 15590}
2025-06-25 12:33:46 | INFO     | QA-Suite | step:108 | STEP [6/7] Run Tests | Context: {"logs_count": 1, "stats": {"passed": 0, "failed": 0, "total": 0}}
2025-06-25 12:33:46 | INFO     | QA-Suite | user_action:150 | USER ACTION: downloaded_results | Context: {"script_length": 15590, "logs_count": 1}
2025-06-25 12:33:46 | INFO     | QA-Suite | step:108 | STEP [7/7] Download Results | Context: {"script_length": 15590, "logs_count": 1}
2025-06-25 12:33:56 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_full_flow_script
2025-06-25 12:34:17 | INFO     | QA-Suite | api_call:124 | API POST /generate_full_flow_script | Status: 200 | Time: 20.93s | Context: {"website_url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/"}
2025-06-25 12:34:17 | INFO     | QA-Suite | performance:157 | PERFORMANCE full_flow_script_generation_ui | Duration: 20.93s | Context: {"script_length": 9885}
2025-06-25 12:34:17 | INFO     | QA-Suite | user_action:150 | USER ACTION: downloaded_results | Context: {"script_length": 9885, "logs_count": 1}
2025-06-25 12:34:17 | INFO     | QA-Suite | step:108 | STEP [7/7] Download Results | Context: {"script_length": 9885, "logs_count": 1}
2025-06-25 12:35:02 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_run_script | Context: {"script_length": 9885}
2025-06-25 12:39:54 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_execution_ui | Duration: 292.46s | Context: {"script_length": 9885}
2025-06-25 12:39:54 | INFO     | QA-Suite | user_action:150 | USER ACTION: downloaded_results | Context: {"script_length": 9885, "logs_count": 1}
2025-06-25 12:39:54 | INFO     | QA-Suite | step:108 | STEP [7/7] Download Results | Context: {"script_length": 9885, "logs_count": 1}
2025-06-25 12:40:12 | INFO     | QA-Suite | user_action:150 | USER ACTION: entered_website_url | Context: {"url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/"}
2025-06-25 12:40:12 | INFO     | QA-Suite | step:108 | STEP [1/7] Enter Website URL | Context: {"url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/"}
2025-06-25 12:40:16 | INFO     | QA-Suite | user_action:150 | USER ACTION: uploaded_js_file | Context: {"filename": "jump_full_flow.js", "file_size": 10432}
2025-06-25 12:40:16 | INFO     | QA-Suite | step:108 | STEP [2/7] Upload JS File | Context: {"filename": "jump_full_flow.js", "file_size": 10432}
2025-06-25 12:40:25 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_test_ideas | Context: {"functionality": "Just for login page"}
2025-06-25 12:40:37 | INFO     | QA-Suite | api_call:124 | API POST /generate_test_ideas | Status: 200 | Time: 11.52s | Context: {"functionality": "Just for login page", "js_content_length": 10432}
2025-06-25 12:40:37 | INFO     | QA-Suite | performance:157 | PERFORMANCE test_ideas_generation_ui | Duration: 11.52s | Context: {"functionality": "Just for login page", "test_ideas_count": 20}
2025-06-25 12:40:37 | INFO     | QA-Suite | step:108 | STEP [3/7] Generate Test Ideas | Context: {"functionality": "Just for login page", "test_ideas_count": 20}
2025-06-25 12:40:40 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_script | Context: {"selected_tests_count": 20, "selected_tests": ["TC_Login_001: Successful Login with Valid Credentials and Accepted Terms", "TC_Login_002: Login Attempt with Invalid Email", "TC_Login_003: Login Attempt with Invalid Password", "TC_Login_004: Login Attempt with Invalid Email and Password Combination", "TC_Login_005: Login Attempt with Empty Email Field", "TC_Login_006: Login Attempt with Empty Password Field", "TC_Login_007: Login Attempt with Both Email and Password Fields Empty", "TC_Login_008: Login Attempt Without Accepting Terms & Conditions", "TC_Login_009: Verify Error Message Display for Invalid Credentials", "TC_Login_010: Verify Error Message Display for Missing Terms & Conditions Acceptance", "TC_Login_011: Login with Email Containing Leading/Trailing Spaces", "TC_Login_012: Login with Password Containing Leading/Trailing Spaces", "TC_Login_013: Verify Navigation to OTP Page After Successful Credential Submission", "TC_OTP_001: Successful OTP Verification with Valid Code", "TC_OTP_002: OTP Verification Attempt with Invalid Code", "TC_OTP_003: OTP Verification Attempt with Expired Code", "TC_OTP_004: OTP Verification Attempt with Empty Code Fields", "TC_OTP_005: OTP Verification Attempt with Partial Code Entered", "TC_OTP_006: Verify 'Resend OTP' Functionality", "TC_OTP_007: Verify Navigation to Dashboard After Successful OTP Verification"]}
2025-06-25 12:42:51 | INFO     | QA-Suite | api_call:124 | API POST /generate_script | Status: 200 | Time: 130.53s | Context: {"website_url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/", "selected_tests_count": 20}
2025-06-25 12:42:51 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_generation_ui | Duration: 130.54s | Context: {"selected_tests_count": 20, "script_length": 22225}
2025-06-25 12:42:51 | INFO     | QA-Suite | step:108 | STEP [4/7] Generate Script | Context: {"selected_tests_count": 20, "script_length": 22225}
2025-06-25 12:43:00 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_run_script | Context: {"script_length": 22225}
2025-06-25 12:43:32 | INFO     | QA-Suite | api_call:124 | API POST /run_script | Status: 400 | Time: 31.80s | Context: {"script_length": 22225}
2025-06-25 12:43:32 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_execution_ui | Duration: 31.80s | Context: {"script_length": 22225}
2025-06-25 12:43:32 | INFO     | QA-Suite | step:108 | STEP [6/7] Run Tests | Context: {"logs_count": 1, "stats": {"passed": 0, "failed": 0, "total": 0}}
2025-06-25 12:43:32 | INFO     | QA-Suite | user_action:150 | USER ACTION: downloaded_results | Context: {"script_length": 22225, "logs_count": 1}
2025-06-25 12:43:32 | INFO     | QA-Suite | step:108 | STEP [7/7] Download Results | Context: {"script_length": 22225, "logs_count": 1}
2025-06-25 12:55:20 | INFO     | QA-Suite | user_action:150 | USER ACTION: entered_website_url | Context: {"url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/"}
2025-06-25 12:55:20 | INFO     | QA-Suite | step:108 | STEP [1/7] Enter Website URL | Context: {"url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/"}
2025-06-25 12:55:27 | INFO     | QA-Suite | user_action:150 | USER ACTION: uploaded_js_file | Context: {"filename": "jump_full_flow.js", "file_size": 10432}
2025-06-25 12:55:27 | INFO     | QA-Suite | step:108 | STEP [2/7] Upload JS File | Context: {"filename": "jump_full_flow.js", "file_size": 10432}
2025-06-25 12:55:33 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_test_ideas | Context: {"functionality": "Login test cases"}
2025-06-25 12:55:42 | INFO     | QA-Suite | api_call:124 | API POST /generate_test_ideas | Status: 200 | Time: 8.80s | Context: {"functionality": "Login test cases", "js_content_length": 10432}
2025-06-25 12:55:42 | INFO     | QA-Suite | performance:157 | PERFORMANCE test_ideas_generation_ui | Duration: 8.80s | Context: {"functionality": "Login test cases", "test_ideas_count": 20}
2025-06-25 12:55:42 | INFO     | QA-Suite | step:108 | STEP [3/7] Generate Test Ideas | Context: {"functionality": "Login test cases", "test_ideas_count": 20}
2025-06-25 12:55:49 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_script | Context: {"selected_tests_count": 20, "selected_tests": ["Verify successful login with valid credentials and accepted Terms & Conditions.", "Verify login failure with an unregistered company email.", "Verify login failure with a valid company email but incorrect password.", "Verify login failure when company email field is left empty.", "Verify login failure when password field is left empty.", "Verify login failure when both company email and password fields are empty.", "Verify login failure when Terms & Conditions checkbox is not accepted.", "Verify error message display for invalid company email format.", "Verify password field masks input characters for security.", "Verify the presence and interactivity of the 'Company Email' input field.", "Verify the presence and interactivity of the 'Password' input field.", "Verify the presence and interactivity of the 'Terms & Conditions' checkbox.", "Verify the presence and interactivity of the 'Sign In' button.", "Verify redirection to the OTP verification page upon successful login.", "Verify appropriate error message is displayed for invalid login credentials.", "Verify appropriate error message is displayed when email field is empty.", "Verify appropriate error message is displayed when password field is empty.", "Verify handling of leading/trailing spaces in the company email field.", "Verify handling of leading/trailing spaces in the password field.", "Verify that the 'Sign In' button is disabled until all required fields are filled and T&C accepted."]}
2025-06-25 12:57:49 | INFO     | QA-Suite | api_call:124 | API POST /generate_script | Status: 200 | Time: 120.43s | Context: {"website_url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/", "selected_tests_count": 20}
2025-06-25 12:57:49 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_generation_ui | Duration: 120.43s | Context: {"selected_tests_count": 20, "script_length": 20277}
2025-06-25 12:57:49 | INFO     | QA-Suite | step:108 | STEP [4/7] Generate Script | Context: {"selected_tests_count": 20, "script_length": 20277}
2025-06-25 12:58:09 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_run_script | Context: {"script_length": 20277}
2025-06-25 12:58:41 | INFO     | QA-Suite | api_call:124 | API POST /run_script | Status: 400 | Time: 31.80s | Context: {"script_length": 20277}
2025-06-25 12:58:41 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_execution_ui | Duration: 31.80s | Context: {"script_length": 20277}
2025-06-25 12:58:41 | INFO     | QA-Suite | step:108 | STEP [6/7] Run Tests | Context: {"logs_count": 1, "stats": {"passed": 0, "failed": 0, "total": 0}}
2025-06-25 12:58:41 | INFO     | QA-Suite | user_action:150 | USER ACTION: downloaded_results | Context: {"script_length": 20277, "logs_count": 1}
2025-06-25 12:58:41 | INFO     | QA-Suite | step:108 | STEP [7/7] Download Results | Context: {"script_length": 20277, "logs_count": 1}
2025-06-25 13:05:01 | INFO     | QA-Suite | user_action:150 | USER ACTION: entered_website_url | Context: {"url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/"}
2025-06-25 13:05:01 | INFO     | QA-Suite | step:108 | STEP [1/7] Enter Website URL | Context: {"url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/"}
2025-06-25 13:05:04 | INFO     | QA-Suite | user_action:150 | USER ACTION: uploaded_js_file | Context: {"filename": "jump_full_flow.js", "file_size": 10432}
2025-06-25 13:05:04 | INFO     | QA-Suite | step:108 | STEP [2/7] Upload JS File | Context: {"filename": "jump_full_flow.js", "file_size": 10432}
2025-06-25 13:05:14 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_test_ideas | Context: {"functionality": "for login func"}
2025-06-25 13:05:23 | INFO     | QA-Suite | api_call:124 | API POST /generate_test_ideas | Status: 200 | Time: 8.73s | Context: {"functionality": "for login func", "js_content_length": 10432}
2025-06-25 13:05:23 | INFO     | QA-Suite | performance:157 | PERFORMANCE test_ideas_generation_ui | Duration: 8.73s | Context: {"functionality": "for login func", "test_ideas_count": 20}
2025-06-25 13:05:23 | INFO     | QA-Suite | step:108 | STEP [3/7] Generate Test Ideas | Context: {"functionality": "for login func", "test_ideas_count": 20}
2025-06-25 13:05:29 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_script | Context: {"selected_tests_count": 20, "selected_tests": ["Verify successful user login with valid credentials and accepted Terms & Conditions.", "Verify login failure when submitting an invalid company email.", "Verify login failure when submitting an incorrect password.", "Verify login failure with a combination of invalid email and password.", "Verify login failure when the company email field is left empty.", "Verify login failure when the password field is left empty.", "Verify login failure when both email and password fields are empty.", "Verify login failure when Terms & Conditions checkbox is not accepted.", "Verify successful navigation to the OTP verification page after valid login credentials.", "Verify login failure with valid credentials containing leading/trailing spaces in email.", "Verify login failure with valid credentials containing leading/trailing spaces in password.", "Verify successful OTP verification with a valid 5-digit code.", "Verify OTP verification failure with an incorrect 5-digit code.", "Verify OTP verification failure when less than 5 digits are entered.", "Verify OTP verification failure when non-numeric characters are entered.", "Verify OTP verification failure when all OTP input fields are empty.", "Verify OTP verification failure when some OTP input fields are empty.", "Verify OTP verification failure when the OTP has expired (simulated scenario).", "Verify all required UI elements are present on the login page.", "Verify all required UI elements are present on the OTP verification page."]}
2025-06-25 13:08:13 | INFO     | QA-Suite | api_call:124 | API POST /generate_script | Status: 200 | Time: 164.29s | Context: {"website_url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/", "selected_tests_count": 20}
2025-06-25 13:08:13 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_generation_ui | Duration: 164.29s | Context: {"selected_tests_count": 20, "script_length": 77913}
2025-06-25 13:08:13 | INFO     | QA-Suite | step:108 | STEP [4/7] Generate Script | Context: {"selected_tests_count": 20, "script_length": 77913}
2025-06-25 13:08:35 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_run_script | Context: {"script_length": 77913}
2025-06-25 13:09:07 | INFO     | QA-Suite | api_call:124 | API POST /run_script | Status: 400 | Time: 32.05s | Context: {"script_length": 77913}
2025-06-25 13:09:07 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_execution_ui | Duration: 32.06s | Context: {"script_length": 77913}
2025-06-25 13:09:07 | INFO     | QA-Suite | step:108 | STEP [6/7] Run Tests | Context: {"logs_count": 1, "stats": {"passed": 0, "failed": 0, "total": 0}}
2025-06-25 13:09:07 | INFO     | QA-Suite | user_action:150 | USER ACTION: downloaded_results | Context: {"script_length": 77913, "logs_count": 1}
2025-06-25 13:09:07 | INFO     | QA-Suite | step:108 | STEP [7/7] Download Results | Context: {"script_length": 77913, "logs_count": 1}
2025-06-25 13:15:38 | INFO     | QA-Suite | user_action:150 | USER ACTION: entered_website_url | Context: {"url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/"}
2025-06-25 13:15:38 | INFO     | QA-Suite | step:108 | STEP [1/7] Enter Website URL | Context: {"url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/"}
2025-06-25 13:15:46 | INFO     | QA-Suite | user_action:150 | USER ACTION: uploaded_js_file | Context: {"filename": "jump_full_flow.js", "file_size": 10432}
2025-06-25 13:15:46 | INFO     | QA-Suite | step:108 | STEP [2/7] Upload JS File | Context: {"filename": "jump_full_flow.js", "file_size": 10432}
2025-06-25 13:16:30 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_test_ideas | Context: {"functionality": "For login only"}
2025-06-25 13:16:37 | INFO     | QA-Suite | api_call:124 | API POST /generate_test_ideas | Status: 200 | Time: 6.65s | Context: {"functionality": "For login only", "js_content_length": 10432}
2025-06-25 13:16:37 | INFO     | QA-Suite | performance:157 | PERFORMANCE test_ideas_generation_ui | Duration: 6.65s | Context: {"functionality": "For login only", "test_ideas_count": 20}
2025-06-25 13:16:37 | INFO     | QA-Suite | step:108 | STEP [3/7] Generate Test Ideas | Context: {"functionality": "For login only", "test_ideas_count": 20}
2025-06-25 13:16:40 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_script | Context: {"selected_tests_count": 20, "selected_tests": ["Verify successful user login with valid credentials and accepted T&C.", "Verify login failure with an invalid company email.", "Verify login failure with an invalid password.", "Verify login failure when company email field is empty.", "Verify login failure when password field is empty.", "Verify login failure when both company email and password fields are empty.", "Verify login failure when Terms & Conditions are not accepted.", "Verify login failure with a non-existent company email.", "Verify login failure with a valid email but incorrect password.", "Verify login failure with an incorrect email but correct password.", "Verify successful OTP verification with a valid 5-digit code.", "Verify OTP verification failure with an incorrect 5-digit code.", "Verify OTP verification failure when OTP field is empty.", "Verify OTP verification failure with a partially entered OTP.", "Verify OTP verification failure after multiple incorrect OTP attempts (account lockout).", "Verify OTP verification failure with an expired OTP code.", "Verify navigation to OTP page after successful login credentials submission.", "Verify navigation to Dashboard after successful OTP verification.", "Verify error message display for invalid login credentials.", "Verify error message display for invalid OTP code."]}
2025-06-25 13:18:31 | INFO     | QA-Suite | api_call:124 | API POST /generate_script | Status: 200 | Time: 111.01s | Context: {"website_url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/", "selected_tests_count": 20}
2025-06-25 13:18:31 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_generation_ui | Duration: 111.01s | Context: {"selected_tests_count": 20, "script_length": 31839}
2025-06-25 13:18:31 | INFO     | QA-Suite | step:108 | STEP [4/7] Generate Script | Context: {"selected_tests_count": 20, "script_length": 31839}
2025-06-25 13:19:59 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_run_script | Context: {"script_length": 31839}
2025-06-25 13:20:32 | INFO     | QA-Suite | api_call:124 | API POST /run_script | Status: 400 | Time: 32.50s | Context: {"script_length": 31839}
2025-06-25 13:20:32 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_execution_ui | Duration: 32.50s | Context: {"script_length": 31839}
2025-06-25 13:20:32 | INFO     | QA-Suite | step:108 | STEP [6/7] Run Tests | Context: {"logs_count": 1, "stats": {"passed": 0, "failed": 0, "total": 0}}
2025-06-25 13:20:32 | INFO     | QA-Suite | user_action:150 | USER ACTION: downloaded_results | Context: {"script_length": 31839, "logs_count": 1}
2025-06-25 13:20:32 | INFO     | QA-Suite | step:108 | STEP [7/7] Download Results | Context: {"script_length": 31839, "logs_count": 1}
2025-06-25 13:23:19 | INFO     | QA-Suite | user_action:150 | USER ACTION: entered_website_url | Context: {"url": " \ud83d\udee0\ufe0f Workflow \ud83c\udfc1 Enter Website URL \ud83d\udcc4 Upload Recorded JS File \ud83e\udde0 Generate Test Ideas \ud83e\uddea Select Tests & Generate Script \ud83d\udcdd Edit & Save Script \u25b6\ufe0f Run Test Cases \ud83d\udce5 Download Results Follow the steps to generate and run your automated QA tests.  Step 7: Download  \ud83e\udd16 AI Automated QA Suite Automate your website QA with AI-generated Playwright scripts from your recorded interactions.  \ud83c\udfc1 Website URL  https://valueinsightpro.jumpiq.com/auth/login?redirect=/ \ud83d\udcc4 Upload Playwright JS file  Drag and drop file here Limit 200MB per file \u2022 JS jump_full_flow.js 10.4KB \ud83d\udca1 Tip: For best results, use a recording tool that generates selectors with data-testid or other unique attributes.  Uploaded: jump_full_flow.js  \ud83e\udde0 Describe Functionality & Generate Test Ideas What functionality do you want test cases for? (e.g., Login, Signup)  For login only  \ud83e\uddea Select Tests & Generate Script                       \ud83d\udcdd Edit & Save Script   Edit your Playwright Python script below:  import pytest from playwright.sync_api import sync_playwright, expect from datetime import datetime  @pytest.fixture(scope=\"session\") def browser():     with sync_playwright() as p:         browser = p.chromium.launch(headless=False,slow_mo=1000)         yield browser         browser.close()  @pytest.fixture def page(browser):     page = browser.new_page()     yield page     page.close()  def test_successful_login_valid_credentials(page, page):     # Website URL from JS file     website_url = 'https://valueinsightpro.jumpiq.com/auth/login?redirect=/'     page.goto(website_url)     page.set_viewport_size({\"width\": 1536, \"height\": 744})      # Store initial URL for navigation assertion     initial_login_url = page.url      # STEP 1: Enter valid company email     page.locator('[data-testid=\"company-email-input\"]').click()     page.locator('[data-testid=\"company-email-input\"]').fill(\"test3\")      # STEP 2: Enter the corresponding valid password     page.locator('[data-testid=\"password-input\"]').click()     page.locator('[data-testid=\"password-input\"]').fill(\"value@123\")      # STEP 3: Accept the Terms & Conditions     page.locator('.ant-checkbox-input').click()      # STEP 4: Submit the valid login credentials. Expect navigation to OTP verification page.     with page.expect_navigation():         page.locator('button').click() # \"Sign In\" button      # Assert that navigation occurred away from the login page     expect(page).not_to_have_url(initial_login_url)      # Store OTP page URL for navigation assertion     initial_otp_url = page.url      # STEP 5: Enter a valid five-digit OTP     page.locator('.ant-input-compact-first-item').click()     page.locator('.ant-input-compact-first-item').fill(\"9\")     page.locator('.ant-input:nth-child(2)').fill(\"9\")     page.locator('.ant-input:nth-child(3)').fill(\"9\")     page.locator('.ant-input:nth-child(4)').fill(\"9\")     page.locator('.ant-input-compact-last-item').fill(\"9\")      # STEP 6: Submit the valid OTP. Expect navigation to the main application dashboard.     with page.expect_navigation():         page.locator('.ant-btn-default').click() # \"Verify\" button      # Assert that navigation occurred away from the OTP page     expect(page).not_to_have_url(initial_otp_url)     # Assert that a common element on the dashboard is visible (e.g., the first card from STAGE 3)     expect(page.locator('.card:nth-child(1) > .overlay')).to_be_visible()   def test_login_failure_invalid_company_email(page, page):     website_url = 'https://valueinsightpro.jumpiq.com/auth/login?redirect=/'     page.goto(website_url)     page.set_viewport_size({\"width\": 1536, \"height\": 744})      initial_url = page.url      # Fill invalid email, valid password, and accept T&C     page.locator('[data-testid=\"company-email-input\"]').click()     page.locator('[data-testid=\"company-email-input\"]').fill(\"invalid_email@example.com\") # Invalid email     page.locator('[data-testid=\"password-input\"]').click()     page.locator('[data-testid=\"password-input\"]').fill(\"value@123\") # Valid password     page.locator('.ant-checkbox-input').click()      submit_button = page.locator('button') # \"Sign In\" button      # Check if submit button is disabled (though it's unlikely for invalid credentials)     if submit_button.is_disabled():         expect(submit_button).to_be_disabled()     else:         submit_button.click()         # After clicking, check that the URL did not change         expect(page).to_have_url(initial_url)         # The next expected element in the flow (OTP input) is NOT visible         expect(page.locator('.ant-input-compact-first-item')).not_to_be_visible()         # Assert that the current form fields/buttons are still visible         expect(page.locator('[data-testid=\"company-email-input\"]')).to_be_visible()         expect(page.locator('[data-testid=\"password-input\"]')).to_be_visible()         expect(submit_button).to_be_visible()   def test_login_failure_invalid_password(page, page):     website_url = 'https://valueinsightpro.jumpiq.com/auth/login?redirect=/'     page.goto(website_url)     page.set_viewport_size({\"width\": 1536, \"height\": 744})      initial_url = page.url      # Fill valid email, invalid password, and accept T&C     page.locator('[data-testid=\"company-email-input\"]').click()     page.locator('[data-testid=\"company-email-input\"]').fill(\"test3\") # Valid email     page.locator('[data-testid=\"password-input\"]').click()     page.locator('[data-testid=\"password-input\"]').fill(\"wrong_password\") # Invalid password     page.locator('.ant-checkbox-input').click()      submit_button = page.locator('button') # \"Sign In\" button      if submit_button.is_disabled():         expect(submit_button).to_be_disabled()     else:         submit_button.click()         # After clicking, check that the URL did not change         expect(page).to_have_url(initial_url)         # The next expected element in the flow (OTP input) is NOT visible         expect(page.locator('.ant-input-compact-first-item')).not_to_be_visible()         # Assert that the current form fields/buttons are still visible         expect(page.locator('[data-testid=\"company-email-input\"]')).to_be_visible()         expect(page.locator('[data-testid=\"password-input\"]')).to_be_visible()         expect(submit_button).to_be_visible()   def test_login_failure_empty_company_email(page, page):     website_url = 'https://valueinsightpro.jumpiq.com/auth/login?redirect=/'     page.goto(website_url)     page.set_viewport_size({\"width\": 1536, \"height\": 744})      initial_url = page.url      # Leave email empty, fill valid password, and accept T&C     page.locator('[data-testid=\"company-email-input\"]').click()     page.locator('[data-testid=\"company-email-input\"]').fill(\"\") # Empty email     page.locator('[data-testid=\"password-input\"]').click()     page.locator('[data-testid=\"password-input\"]').fill(\"value@123\") # Valid password     page.locator('.ant-checkbox-input').click()      submit_button = page.locator('button') # \"Sign In\" button      # For empty required fields, the button might be disabled or a client-side validation might prevent submission.     # We follow the negative test logic: check if disabled, otherwise click and assert no navigation.     if submit_button.is_disabled():         expect(submit_button).to_be_disabled()     else:         submit_button.click()         # After clicking, check that the URL did not change         expect(page).to_have_url(initial_url)         # The next expected element in the flow (OTP input) is NOT visible         expect(page.locator('.ant-input-compact-first-item')).not_to_be_visible()         # Assert that the current form fields/buttons are still visible         expect(page.locator('[data-testid=\"company-email-input\"]')).to_be_visible()         expect(page.locator('[data-testid=\"password-input\"]')).to_be_visible()         expect(submit_button).to_be_visible()  def test_login_failure_empty_password(page, page):     # Common setup for login tests     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')     page.set_viewport_size({\"width\": 1536, \"height\": 744})      # Locators     company_email_input = page.locator('[data-testid=\"company-email-input\"]')     password_input = page.locator('[data-testid=\"password-input\"]')     terms_checkbox = page.locator('.ant-checkbox-input')     sign_in_button = page.locator('button', has_text=\"Sign In\")     otp_first_input = page.locator('.ant-input-compact-first-item') # Next expected element after successful login      # Fill valid email     company_email_input.fill(\"test3\")     # Leave password field empty      # Accept Terms & Conditions     terms_checkbox.click()      initial_url = page.url      # Click Sign In button     # Assuming the button is not disabled for this scenario based on JS file     sign_in_button.click()      # Assertions for negative login case     expect(page).to_have_url(initial_url)     expect(otp_first_input).not_to_be_visible() # OTP input should not be visible     expect(company_email_input).to_be_visible()     expect(password_input).to_be_visible()     expect(terms_checkbox).to_be_visible()     expect(sign_in_button).to_be_visible()  def test_login_failure_empty_email_and_password(page, page):     # Common setup for login tests     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')     page.set_viewport_size({\"width\": 1536, \"height\": 744})      # Locators     company_email_input = page.locator('[data-testid=\"company-email-input\"]')     password_input = page.locator('[data-testid=\"password-input\"]')     terms_checkbox = page.locator('.ant-checkbox-input')     sign_in_button = page.locator('button', has_text=\"Sign In\")     otp_first_input = page.locator('.ant-input-compact-first-item') # Next expected element after successful login      # Leave both email and password fields empty      # Accept Terms & Conditions     terms_checkbox.click()      initial_url = page.url      # Click Sign In button     # Assuming the button is not disabled for this scenario based on JS file     sign_in_button.click()      # Assertions for negative login case     expect(page).to_have_url(initial_url)     expect(otp_first_input).not_to_be_visible() # OTP input should not be visible     expect(company_email_input).to_be_visible()     expect(password_input).to_be_visible()     expect(terms_checkbox).to_be_visible()     expect(sign_in_button).to_be_visible()  def test_login_failure_terms_not_accepted(page, page):     # Common setup for login tests     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')     page.set_viewport_size({\"width\": 1536, \"height\": 744})      # Locators     company_email_input = page.locator('[data-testid=\"company-email-input\"]')     password_input = page.locator('[data-testid=\"password-input\"]')     terms_checkbox = page.locator('.ant-checkbox-input')     sign_in_button = page.locator('button', has_text=\"Sign In\")     otp_first_input = page.locator('.ant-input-compact-first-item') # Next expected element after successful login      # Fill valid email and password     company_email_input.fill(\"test3\")     password_input.fill(\"value@123\")     # Do NOT accept Terms & Conditions      initial_url = page.url      # Click Sign In button     # Assuming the button is not disabled for this scenario based on JS file     sign_in_button.click()      # Assertions for negative login case     expect(page).to_have_url(initial_url)     expect(otp_first_input).not_to_be_visible() # OTP input should not be visible     expect(company_email_input).to_be_visible()     expect(password_input).to_be_visible()     expect(terms_checkbox).to_be_visible()     expect(sign_in_button).to_be_visible()  def test_login_failure_non_existent_email(page, page):     # Common setup for login tests     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')     page.set_viewport_size({\"width\": 1536, \"height\": 744})      # Locators     company_email_input = page.locator('[data-testid=\"company-email-input\"]')     password_input = page.locator('[data-testid=\"password-input\"]')     terms_checkbox = page.locator('.ant-checkbox-input')     sign_in_button = page.locator('button', has_text=\"Sign In\")     otp_first_input = page.locator('.ant-input-compact-first-item') # Next expected element after successful login      # Fill non-existent email     company_email_input.fill(f\"nonexistent_{datetime.now().strftime('%Y%m%d%H%M%S')}@example.com\")     # Fill valid password     password_input.fill(\"value@123\")      # Accept Terms & Conditions     terms_checkbox.click()      initial_url = page.url      # Click Sign In button     # Assuming the button is not disabled for this scenario based on JS file     sign_in_button.click()      # Assertions for negative login case     expect(page).to_have_url(initial_url)     expect(otp_first_input).not_to_be_visible() # OTP input should not be visible     expect(company_email_input).to_be_visible()     expect(password_input).to_be_visible()     expect(terms_checkbox).to_be_visible()     expect(sign_in_button).to_be_visible()  def test_login_failure_invalid_password(page, page):     # ===== STAGE 1: LOGIN & AUTHENTICATION (Negative Test) =====     # GOAL: Verify login failure with a valid email but incorrect password.     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')     page.set_viewport_size({\"width\": 1536, \"height\": 744})      # STEP 1: Enter valid company email.     page.locator('[data-testid=\"company-email-input\"]').fill(\"test3\")      # STEP 2: Enter an incorrect password.     page.locator('[data-testid=\"password-input\"]').fill(\"incorrect_password\")      # STEP 3: Accept the Terms & Conditions.     page.locator('.ant-checkbox-input').click()      # STEP 4: Attempt to submit invalid login credentials.     initial_url = page.url     sign_in_button = page.locator('button:has-text(\"Sign In\")')          # Check if button is disabled (though unlikely for invalid credentials, but per strict rule)     if sign_in_button.is_disabled():         expect(sign_in_button).to_be_disabled()     else:         sign_in_button.click()         # After clicking, check that the URL did not change         expect(page).to_have_url(initial_url)         # Check that the next expected element (OTP input) is NOT visible         expect(page.locator('.ant-input-compact-first-item')).not_to_be_visible()         # Assert that the current form fields/buttons are still visible         expect(page.locator('[data-testid=\"company-email-input\"]')).to_be_visible()         expect(page.locator('[data-testid=\"password-input\"]')).to_be_visible()         expect(page.locator('.ant-checkbox-input')).to_be_visible()         expect(sign_in_button).to_be_visible()  def test_login_failure_invalid_email(page, page):     # ===== STAGE 1: LOGIN & AUTHENTICATION (Negative Test) =====     # GOAL: Verify login failure with an incorrect email but correct password.     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')     page.set_viewport_size({\"width\": 1536, \"height\": 744})      # STEP 1: Enter an incorrect company email.     page.locator('[data-testid=\"company-email-input\"]').fill(\"incorrect@email.com\")      # STEP 2: Enter the corresponding valid password.     page.locator('[data-testid=\"password-input\"]').fill(\"value@123\")      # STEP 3: Accept the Terms & Conditions.     page.locator('.ant-checkbox-input').click()      # STEP 4: Attempt to submit invalid login credentials.     initial_url = page.url     sign_in_button = page.locator('button:has-text(\"Sign In\")')      # Check if button is disabled     if sign_in_button.is_disabled():         expect(sign_in_button).to_be_disabled()     else:         sign_in_button.click()         # After clicking, check that the URL did not change         expect(page).to_have_url(initial_url)         # Check that the next expected element (OTP input) is NOT visible         expect(page.locator('.ant-input-compact-first-item')).not_to_be_visible()         # Assert that the current form fields/buttons are still visible         expect(page.locator('[data-testid=\"company-email-input\"]')).to_be_visible()         expect(page.locator('[data-testid=\"password-input\"]')).to_be_visible()         expect(page.locator('.ant-checkbox-input')).to_be_visible()         expect(sign_in_button).to_be_visible()  def test_otp_verification_success(page, page):     # ===== STAGE 1: LOGIN & AUTHENTICATION (Prerequisite for OTP) =====     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')     page.set_viewport_size({\"width\": 1536, \"height\": 744})     page.locator('[data-testid=\"company-email-input\"]').fill(\"test3\")     page.locator('[data-testid=\"password-input\"]').fill(\"value@123\")     page.locator('.ant-checkbox-input').click()     with page.expect_navigation():         page.locator('button:has-text(\"Sign In\")').click()      # ===== STAGE 2: OTP VERIFICATION (Positive Test) =====     # GOAL: Successfully pass the Two-Factor Authentication step.     initial_url = page.url # This is the OTP page URL      # STEP 5: Enter a valid five-digit OTP.     page.locator('.ant-input-compact-first-item').fill(\"9\")     page.locator('.ant-input:nth-child(2)').fill(\"9\")     page.locator('.ant-input:nth-child(3)').fill(\"9\")     page.locator('.ant-input:nth-child(4)').fill(\"9\")     page.locator('.ant-input-compact-last-item').fill(\"9\")      # STEP 6: Submit the valid OTP. Expect navigation to the main application dashboard.     verify_button = page.locator('.ant-btn-default:has-text(\"Verify\")')     with page.expect_navigation():         verify_button.click()     expect(page).not_to_have_url(initial_url)  def test_otp_verification_failure_incorrect_code(page, page):     # ===== STAGE 1: LOGIN & AUTHENTICATION (Prerequisite for OTP) =====     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')     page.set_viewport_size({\"width\": 1536, \"height\": 744})     page.locator('[data-testid=\"company-email-input\"]').fill(\"test3\")     page.locator('[data-testid=\"password-input\"]').fill(\"value@123\")     page.locator('.ant-checkbox-input').click()     with page.expect_navigation():         page.locator('button:has-text(\"Sign In\")').click()      # ===== STAGE 2: OTP VERIFICATION (Negative Test) =====     # GOAL: Verify OTP verification failure with an incorrect 5-digit code.     initial_url = page.url # This is the OTP page URL      # STEP 5: Enter an incorrect five-digit OTP.     page.locator('.ant-input-compact-first-item').fill(\"1\")     page.locator('.ant-input:nth-child(2)').fill(\"2\")     page.locator('.ant-input:nth-child(3)').fill(\"3\")     page.locator('.ant-input:nth-child(4)').fill(\"4\")     page.locator('.ant-input-compact-last-item').fill(\"5\")      # STEP 6: Attempt to submit the invalid OTP.     verify_button = page.locator('.ant-btn-default:has-text(\"Verify\")')      # Check if button is disabled     if verify_button.is_disabled():         expect(verify_button).to_be_disabled()     else:         verify_button.click()         # After clicking, check that the URL did not change         expect(page).to_have_url(initial_url)         # Check that the next expected element (Instant Report card on dashboard) is NOT visible         expect(page.locator('.card:nth-child(1) > .overlay')).not_to_be_visible()         # Assert that the current form fields/buttons are still visible         expect(page.locator('.ant-input-compact-first-item')).to_be_visible()         expect(page.locator('.ant-input:nth-child(2)')).to_be_visible()         expect(page.locator('.ant-input:nth-child(3)')).to_be_visible()         expect(page.locator('.ant-input:nth-child(4)')).to_be_visible()         expect(page.locator('.ant-input-compact-last-item')).to_be_visible()         expect(verify_button).to_be_visible()  def test_otp_verification_failure_empty_field(page, page):     \"\"\"     Verify OTP verification fails when all OTP fields are left empty.     \"\"\"     _login_to_otp_page(page)      initial_url = page.url     # Using a more specific locator based on visible text as per JS comments     verify_button = page.locator('.ant-btn-default:has-text(\"Verify\")')      # Check if the button is disabled. For empty fields, it might be.     if verify_button.is_disabled():         expect(verify_button).to_be_disabled()     else:         verify_button.click()         # After clicking, check that the URL did not change         expect(page).to_have_url(initial_url)         # The next expected element in the flow (dashboard card) is NOT visible         expect(page.locator('.card:nth-child(1) > .overlay')).not_to_be_visible()         # Assert that the current form fields/buttons are still visible         expect(page.locator('.ant-input-compact-first-item')).to_be_visible()         expect(page.locator('.ant-input:nth-child(2)')).to_be_visible()         expect(page.locator('.ant-input:nth-child(3)')).to_be_visible()         expect(page.locator('.ant-input:nth-child(4)')).to_be_visible()         expect(page.locator('.ant-input-compact-last-item')).to_be_visible()         expect(verify_button).to_be_visible()  def test_otp_verification_failure_partially_entered(page, page):     \"\"\"     Verify OTP verification fails with a partially entered OTP.     \"\"\"     _login_to_otp_page(page)      # Fill only the first two OTP fields with arbitrary digits     page.locator('.ant-input-compact-first-item').fill(\"1\")     page.locator('.ant-input:nth-child(2)').fill(\"2\")      initial_url = page.url     verify_button = page.locator('.ant-btn-default:has-text(\"Verify\")')      if verify_button.is_disabled():         expect(verify_button).to_be_disabled()     else:         verify_button.click()         expect(page).to_have_url(initial_url)         expect(page.locator('.card:nth-child(1) > .overlay')).not_to_be_visible()         expect(page.locator('.ant-input-compact-first-item')).to_be_visible()         expect(page.locator('.ant-input:nth-child(2)')).to_be_visible()         expect(page.locator('.ant-input:nth-child(3)')).to_be_visible()         expect(page.locator('.ant-input:nth-child(4)')).to_be_visible()         expect(page.locator('.ant-input-compact-last-item')).to_be_visible()         expect(verify_button).to_be_visible()  def test_otp_verification_failure_multiple_incorrect_attempts(page, page):     \"\"\"     Verify OTP verification failure after multiple incorrect OTP attempts.     (Simulates repeated invalid entries, cannot assert specific \"account lockout\" without UI elements for it).     \"\"\"     _login_to_otp_page(page)      initial_url = page.url     verify_button = page.locator('.ant-btn-default:has-text(\"Verify\")')          # Simulate multiple incorrect attempts (e.g., 3 attempts)     for i in range(3):         # Clear fields before filling for each attempt to simulate a new try         page.locator('.ant-input-compact-first-item').fill(\"\")         page.locator('.ant-input:nth-child(2)').fill(\"\")         page.locator('.ant-input:nth-child(3)').fill(\"\")         page.locator('.ant-input:nth-child(4)').fill(\"\")         page.locator('.ant-input-compact-last-item').fill(\"\")          # Fill with an invalid OTP (e.g., \"11111\")         page.locator('.ant-input-compact-first-item').fill(\"1\")         page.locator('.ant-input:nth-child(2)').fill(\"1\")         page.locator('.ant-input:nth-child(3)').fill(\"1\")         page.locator('.ant-input:nth-child(4)').fill(\"1\")         page.locator('.ant-input-compact-last-item').fill(\"1\")          if verify_button.is_disabled():             expect(verify_button).to_be_disabled()             # If the button becomes disabled, further attempts won't change the state             break         else:             verify_button.click()             # After clicking, check that the URL did not change             expect(page).to_have_url(initial_url)             # The next expected element in the flow (dashboard card) is NOT visible             expect(page.locator('.card:nth-child(1) > .overlay')).not_to_be_visible()             # Assert that the current form fields/buttons are still visible             expect(page.locator('.ant-input-compact-first-item')).to_be_visible()             expect(page.locator('.ant-input:nth-child(2)')).to_be_visible()             expect(page.locator('.ant-input:nth-child(3)')).to_be_visible()             expect(page.locator('.ant-input:nth-child(4)')).to_be_visible()             expect(page.locator('.ant-input-compact-last-item')).to_be_visible()             expect(verify_button).to_be_visible()      # Final assertion after all attempts: still on OTP page, dashboard not visible     expect(page).to_have_url(initial_url)     expect(page.locator('.card:nth-child(1) > .overlay')).not_to_be_visible()     # The button should still be visible, or disabled if lockout occurred (cannot assert lockout directly)     expect(verify_button).to_be_visible()   def test_otp_verification_failure_expired_code(page, page):     \"\"\"     Verify OTP verification failure with an expired OTP code.     (Interpreted as entering an invalid OTP code, as no mechanism to simulate expiration or specific UI for it is provided).     \"\"\"     _login_to_otp_page(page)      # Fill with a different invalid OTP (e.g., \"12345\")     page.locator('.ant-input-compact-first-item').fill(\"1\")     page.locator('.ant-input:nth-child(2)').fill(\"2\")     page.locator('.ant-input:nth-child(3)').fill(\"3\")     page.locator('.ant-input:nth-child(4)').fill(\"4\")     page.locator('.ant-input-compact-last-item').fill(\"5\")      initial_url = page.url     verify_button = page.locator('.ant-btn-default:has-text(\"Verify\")')      if verify_button.is_disabled():         expect(verify_button).to_be_disabled()     else:         verify_button.click()         expect(page).to_have_url(initial_url)         expect(page.locator('.card:nth-child(1) > .overlay')).not_to_be_visible()         expect(page.locator('.ant-input-compact-first-item')).to_be_visible()         expect(page.locator('.ant-input:nth-child(2)')).to_be_visible()         expect(page.locator('.ant-input:nth-child(3)')).to_be_visible()         expect(page.locator('.ant-input:nth-child(4)')).to_be_visible()         expect(page.locator('.ant-input-compact-last-item')).to_be_visible()         expect(verify_button).to_be_visible()  def test_verify_navigation_to_otp_page_after_successful_login_credentials_submission(page, page):     # GOAL: Navigate to the application's login page and authenticate the user.     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')      # SETUP: Set a consistent desktop viewport for reliable element locating.     page.set_viewport_size({\"width\": 1536, \"height\": 744})      initial_url = page.url      # STEP 1: Enter valid company email for a known test account.     page.locator('[data-testid=\"company-email-input\"]').fill(\"test3\")      # STEP 2: Enter the corresponding valid password for the test account.     page.locator('[data-testid=\"password-input\"]').fill(\"value@123\")      # STEP 3: Accept the Terms & Conditions, a required step for login.     page.locator('.ant-checkbox-input').click()      # STEP 4: Submit the valid login credentials. Expect navigation to the OTP verification page.     with page.expect_navigation():         page.locator('button:has-text(\"Sign In\")').click()      expect(page).not_to_have_url(initial_url)  def test_verify_navigation_to_dashboard_after_successful_otp_verification(page, page):     # GOAL: Navigate to the application's login page and authenticate the user.     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')      # SETUP: Set a consistent desktop viewport for reliable element locating.     page.set_viewport_size({\"width\": 1536, \"height\": 744})      # STEP 1: Enter valid company email for a known test account.     page.locator('[data-testid=\"company-email-input\"]').fill(\"test3\")      # STEP 2: Enter the corresponding valid password for the test account.     page.locator('[data-testid=\"password-input\"]').fill(\"value@123\")      # STEP 3: Accept the Terms & Conditions, a required step for login.     page.locator('.ant-checkbox-input').click()      # STEP 4: Submit the valid login credentials. Expect navigation to the OTP verification page.     with page.expect_navigation():         page.locator('button:has-text(\"Sign In\")').click()      # ===== STAGE 2: OTP VERIFICATION =====     initial_url = page.url # Now on OTP page      # STEP 5: Enter a valid five-digit OTP to complete authentication.     page.locator('.ant-input-compact-first-item').fill(\"9\")     page.locator('.ant-input:nth-child(2)').fill(\"9\")     page.locator('.ant-input:nth-child(3)').fill(\"9\")     page.locator('.ant-input:nth-child(4)').fill(\"9\")     page.locator('.ant-input-compact-last-item').fill(\"9\")      # STEP 6: Submit the valid OTP. Expect navigation to the main application dashboard.     with page.expect_navigation():         page.locator('.ant-btn-default:has-text(\"Verify\")').click()      expect(page).not_to_have_url(initial_url)  def test_verify_error_message_display_for_invalid_login_credentials(page, page):     # GOAL: Test invalid login credentials and verify no navigation occurs.     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')      # SETUP: Set a consistent desktop viewport for reliable element locating.     page.set_viewport_size({\"width\": 1536, \"height\": 744})      # STEP 1: Enter invalid company email.     page.locator('[data-testid=\"company-email-input\"]').fill(\"invalid@example.com\")      # STEP 2: Enter invalid password.     page.locator('[data-testid=\"password-input\"]').fill(\"wrongpassword\")      # STEP 3: Accept the Terms & Conditions.     page.locator('.ant-checkbox-input').click()      # STEP 4: Attempt to submit invalid login credentials.     submit_button = page.locator('button:has-text(\"Sign In\")')      if submit_button.is_disabled():         expect(submit_button).to_be_disabled()     else:         initial_url = page.url         submit_button.click()         # After clicking, check that the URL did not change         expect(page).to_have_url(initial_url)         # The next expected element in the flow (OTP input) should NOT be visible         expect(page.locator('.ant-input-compact-first-item')).not_to_be_visible()         # Assert that the current form fields/buttons are still visible         expect(page.locator('[data-testid=\"company-email-input\"]')).to_be_visible()         expect(page.locator('[data-testid=\"password-input\"]')).to_be_visible()         expect(submit_button).to_be_visible()  def test_verify_error_message_display_for_invalid_otp_code(page, page):     # GOAL: Test invalid OTP code and verify no navigation occurs.     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')      # SETUP: Set a consistent desktop viewport for reliable element locating.     page.set_viewport_size({\"width\": 1536, \"height\": 744})      # STEP 1: Enter valid company email for a known test account.     page.locator('[data-testid=\"company-email-input\"]').fill(\"test3\")      # STEP 2: Enter the corresponding valid password for the test account.     page.locator('[data-testid=\"password-input\"]').fill(\"value@123\")      # STEP 3: Accept the Terms & Conditions, a required step for login.     page.locator('.ant-checkbox-input').click()      # STEP 4: Submit the valid login credentials to reach OTP page.     with page.expect_navigation():         page.locator('button:has-text(\"Sign In\")').click()      # ===== STAGE 2: OTP VERIFICATION (Negative Test) =====     initial_url = page.url # Now on OTP page      # STEP 5: Enter an invalid five-digit OTP.     page.locator('.ant-input-compact-first-item').fill(\"1\")     page.locator('.ant-input:nth-child(2)').fill(\"2\")     page.locator('.ant-input:nth-child(3)').fill(\"3\")     page.locator('.ant-input:nth-child(4)').fill(\"4\")     page.locator('.ant-input-compact-last-item').fill(\"5\")      # STEP 6: Attempt to submit the invalid OTP.     submit_button = page.locator('.ant-btn-default:has-text(\"Verify\")')      if submit_button.is_disabled():         expect(submit_button).to_be_disabled()     else:         submit_button.click()         # After clicking, check that the URL did not change         expect(page).to_have_url(initial_url)         # The next expected element in the flow (Instant Report card on dashboard) should NOT be visible         expect(page.locator('.card:nth-child(1) > .overlay')).not_to_be_visible()         # Assert that the current OTP fields and button are still visible         expect(page.locator('.ant-input-compact-first-item')).to_be_visible()         expect(page.locator('.ant-input:nth-child(2)')).to_be_visible()         expect(page.locator('.ant-input:nth-child(3)')).to_be_visible()         expect(page.locator('.ant-input:nth-child(4)')).to_be_visible()         expect(page.locator('.ant-input-compact-last-item')).to_be_visible()         expect(submit_button).to_be_visible()  \u25b6\ufe0f Run Test Cases & View Logs \u2699\ufe0f Advanced Run Settings   Error running script: { \"details\": \"No report generated.\", \"error\": \"Test execution failed\", \"healing_attempts\": [], \"stderr\": \"\", \"stdout\": \"============================= test session starts ==============================\\nplatform linux -- Python 3.12.3, pytest-8.4.0, pluggy-1.6.0\\nrootdir: /tmp/tmpd40ulh2d\\nplugins: metadata-3.1.1, anyio-4.9.0, json-report-1.5.0\\ncollected 0 items / 1 error\\n\\n==================================== ERRORS ====================================\\n_______________________ ERROR collecting test_script.py ________________________\\n/home/shtlp_0133/Desktop/Dev_Code_Test_suite/venv/lib/python3.12/site-packages/_pytest/python.py:497: in importtestmodule\\n mod = import_path(\\n/home/shtlp_0133/Desktop/Dev_Code_Test_suite/venv/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path\\n importlib.import_module(module_name)\\n/usr/lib/python3.12/importlib/init.py:90: in import_module\\n return _bootstrap._gcd_import(name[level:], package, level)\\n ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n<frozen importlib._bootstrap>:1387: in _gcd_import\\n ???\\n<frozen importlib._bootstrap>:1360: in _find_and_load\\n ???\\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\\n ???\\n<frozen importlib._bootstrap>:935: in _load_unlocked\\n ???\\n/home/shtlp_0133/Desktop/Dev_Code_Test_suite/venv/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module\\n source_stat, co = _rewrite_test(fn, self.config)\\n ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/home/shtlp_0133/Desktop/Dev_Code_Test_suite/venv/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:359: in _rewrite_test\\n co = compile(tree, strfn, \"exec\", dont_inherit=True)\\n ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nE File \"/tmp/tmpd40ulh2d/test_script.py\", line 18\\nE def test_successful_login_valid_credentials(page, page):\\nE ^^^^\\nE SyntaxError: duplicate argument 'page' in function definition\\n=========================== short test summary info ============================\\nERROR test_script.py\\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\\n=============================== 1 error in 0.14s ===============================\\n\" }  Error: Failed to run script  \ud83d\udccb Test Results   \tTest Case\tResult\tDuration 0\tError\tFailed to run script\t0s Test Results  0/0 Passed 0 Failed or Errored \ud83d\udce5 Download Results   \ud83d\udd0d Debug & Logs    Made with Streamlit"}
2025-06-25 13:23:19 | INFO     | QA-Suite | step:108 | STEP [1/7] Enter Website URL | Context: {"url": " \ud83d\udee0\ufe0f Workflow \ud83c\udfc1 Enter Website URL \ud83d\udcc4 Upload Recorded JS File \ud83e\udde0 Generate Test Ideas \ud83e\uddea Select Tests & Generate Script \ud83d\udcdd Edit & Save Script \u25b6\ufe0f Run Test Cases \ud83d\udce5 Download Results Follow the steps to generate and run your automated QA tests.  Step 7: Download  \ud83e\udd16 AI Automated QA Suite Automate your website QA with AI-generated Playwright scripts from your recorded interactions.  \ud83c\udfc1 Website URL  https://valueinsightpro.jumpiq.com/auth/login?redirect=/ \ud83d\udcc4 Upload Playwright JS file  Drag and drop file here Limit 200MB per file \u2022 JS jump_full_flow.js 10.4KB \ud83d\udca1 Tip: For best results, use a recording tool that generates selectors with data-testid or other unique attributes.  Uploaded: jump_full_flow.js  \ud83e\udde0 Describe Functionality & Generate Test Ideas What functionality do you want test cases for? (e.g., Login, Signup)  For login only  \ud83e\uddea Select Tests & Generate Script                       \ud83d\udcdd Edit & Save Script   Edit your Playwright Python script below:  import pytest from playwright.sync_api import sync_playwright, expect from datetime import datetime  @pytest.fixture(scope=\"session\") def browser():     with sync_playwright() as p:         browser = p.chromium.launch(headless=False,slow_mo=1000)         yield browser         browser.close()  @pytest.fixture def page(browser):     page = browser.new_page()     yield page     page.close()  def test_successful_login_valid_credentials(page, page):     # Website URL from JS file     website_url = 'https://valueinsightpro.jumpiq.com/auth/login?redirect=/'     page.goto(website_url)     page.set_viewport_size({\"width\": 1536, \"height\": 744})      # Store initial URL for navigation assertion     initial_login_url = page.url      # STEP 1: Enter valid company email     page.locator('[data-testid=\"company-email-input\"]').click()     page.locator('[data-testid=\"company-email-input\"]').fill(\"test3\")      # STEP 2: Enter the corresponding valid password     page.locator('[data-testid=\"password-input\"]').click()     page.locator('[data-testid=\"password-input\"]').fill(\"value@123\")      # STEP 3: Accept the Terms & Conditions     page.locator('.ant-checkbox-input').click()      # STEP 4: Submit the valid login credentials. Expect navigation to OTP verification page.     with page.expect_navigation():         page.locator('button').click() # \"Sign In\" button      # Assert that navigation occurred away from the login page     expect(page).not_to_have_url(initial_login_url)      # Store OTP page URL for navigation assertion     initial_otp_url = page.url      # STEP 5: Enter a valid five-digit OTP     page.locator('.ant-input-compact-first-item').click()     page.locator('.ant-input-compact-first-item').fill(\"9\")     page.locator('.ant-input:nth-child(2)').fill(\"9\")     page.locator('.ant-input:nth-child(3)').fill(\"9\")     page.locator('.ant-input:nth-child(4)').fill(\"9\")     page.locator('.ant-input-compact-last-item').fill(\"9\")      # STEP 6: Submit the valid OTP. Expect navigation to the main application dashboard.     with page.expect_navigation():         page.locator('.ant-btn-default').click() # \"Verify\" button      # Assert that navigation occurred away from the OTP page     expect(page).not_to_have_url(initial_otp_url)     # Assert that a common element on the dashboard is visible (e.g., the first card from STAGE 3)     expect(page.locator('.card:nth-child(1) > .overlay')).to_be_visible()   def test_login_failure_invalid_company_email(page, page):     website_url = 'https://valueinsightpro.jumpiq.com/auth/login?redirect=/'     page.goto(website_url)     page.set_viewport_size({\"width\": 1536, \"height\": 744})      initial_url = page.url      # Fill invalid email, valid password, and accept T&C     page.locator('[data-testid=\"company-email-input\"]').click()     page.locator('[data-testid=\"company-email-input\"]').fill(\"invalid_email@example.com\") # Invalid email     page.locator('[data-testid=\"password-input\"]').click()     page.locator('[data-testid=\"password-input\"]').fill(\"value@123\") # Valid password     page.locator('.ant-checkbox-input').click()      submit_button = page.locator('button') # \"Sign In\" button      # Check if submit button is disabled (though it's unlikely for invalid credentials)     if submit_button.is_disabled():         expect(submit_button).to_be_disabled()     else:         submit_button.click()         # After clicking, check that the URL did not change         expect(page).to_have_url(initial_url)         # The next expected element in the flow (OTP input) is NOT visible         expect(page.locator('.ant-input-compact-first-item')).not_to_be_visible()         # Assert that the current form fields/buttons are still visible         expect(page.locator('[data-testid=\"company-email-input\"]')).to_be_visible()         expect(page.locator('[data-testid=\"password-input\"]')).to_be_visible()         expect(submit_button).to_be_visible()   def test_login_failure_invalid_password(page, page):     website_url = 'https://valueinsightpro.jumpiq.com/auth/login?redirect=/'     page.goto(website_url)     page.set_viewport_size({\"width\": 1536, \"height\": 744})      initial_url = page.url      # Fill valid email, invalid password, and accept T&C     page.locator('[data-testid=\"company-email-input\"]').click()     page.locator('[data-testid=\"company-email-input\"]').fill(\"test3\") # Valid email     page.locator('[data-testid=\"password-input\"]').click()     page.locator('[data-testid=\"password-input\"]').fill(\"wrong_password\") # Invalid password     page.locator('.ant-checkbox-input').click()      submit_button = page.locator('button') # \"Sign In\" button      if submit_button.is_disabled():         expect(submit_button).to_be_disabled()     else:         submit_button.click()         # After clicking, check that the URL did not change         expect(page).to_have_url(initial_url)         # The next expected element in the flow (OTP input) is NOT visible         expect(page.locator('.ant-input-compact-first-item')).not_to_be_visible()         # Assert that the current form fields/buttons are still visible         expect(page.locator('[data-testid=\"company-email-input\"]')).to_be_visible()         expect(page.locator('[data-testid=\"password-input\"]')).to_be_visible()         expect(submit_button).to_be_visible()   def test_login_failure_empty_company_email(page, page):     website_url = 'https://valueinsightpro.jumpiq.com/auth/login?redirect=/'     page.goto(website_url)     page.set_viewport_size({\"width\": 1536, \"height\": 744})      initial_url = page.url      # Leave email empty, fill valid password, and accept T&C     page.locator('[data-testid=\"company-email-input\"]').click()     page.locator('[data-testid=\"company-email-input\"]').fill(\"\") # Empty email     page.locator('[data-testid=\"password-input\"]').click()     page.locator('[data-testid=\"password-input\"]').fill(\"value@123\") # Valid password     page.locator('.ant-checkbox-input').click()      submit_button = page.locator('button') # \"Sign In\" button      # For empty required fields, the button might be disabled or a client-side validation might prevent submission.     # We follow the negative test logic: check if disabled, otherwise click and assert no navigation.     if submit_button.is_disabled():         expect(submit_button).to_be_disabled()     else:         submit_button.click()         # After clicking, check that the URL did not change         expect(page).to_have_url(initial_url)         # The next expected element in the flow (OTP input) is NOT visible         expect(page.locator('.ant-input-compact-first-item')).not_to_be_visible()         # Assert that the current form fields/buttons are still visible         expect(page.locator('[data-testid=\"company-email-input\"]')).to_be_visible()         expect(page.locator('[data-testid=\"password-input\"]')).to_be_visible()         expect(submit_button).to_be_visible()  def test_login_failure_empty_password(page, page):     # Common setup for login tests     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')     page.set_viewport_size({\"width\": 1536, \"height\": 744})      # Locators     company_email_input = page.locator('[data-testid=\"company-email-input\"]')     password_input = page.locator('[data-testid=\"password-input\"]')     terms_checkbox = page.locator('.ant-checkbox-input')     sign_in_button = page.locator('button', has_text=\"Sign In\")     otp_first_input = page.locator('.ant-input-compact-first-item') # Next expected element after successful login      # Fill valid email     company_email_input.fill(\"test3\")     # Leave password field empty      # Accept Terms & Conditions     terms_checkbox.click()      initial_url = page.url      # Click Sign In button     # Assuming the button is not disabled for this scenario based on JS file     sign_in_button.click()      # Assertions for negative login case     expect(page).to_have_url(initial_url)     expect(otp_first_input).not_to_be_visible() # OTP input should not be visible     expect(company_email_input).to_be_visible()     expect(password_input).to_be_visible()     expect(terms_checkbox).to_be_visible()     expect(sign_in_button).to_be_visible()  def test_login_failure_empty_email_and_password(page, page):     # Common setup for login tests     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')     page.set_viewport_size({\"width\": 1536, \"height\": 744})      # Locators     company_email_input = page.locator('[data-testid=\"company-email-input\"]')     password_input = page.locator('[data-testid=\"password-input\"]')     terms_checkbox = page.locator('.ant-checkbox-input')     sign_in_button = page.locator('button', has_text=\"Sign In\")     otp_first_input = page.locator('.ant-input-compact-first-item') # Next expected element after successful login      # Leave both email and password fields empty      # Accept Terms & Conditions     terms_checkbox.click()      initial_url = page.url      # Click Sign In button     # Assuming the button is not disabled for this scenario based on JS file     sign_in_button.click()      # Assertions for negative login case     expect(page).to_have_url(initial_url)     expect(otp_first_input).not_to_be_visible() # OTP input should not be visible     expect(company_email_input).to_be_visible()     expect(password_input).to_be_visible()     expect(terms_checkbox).to_be_visible()     expect(sign_in_button).to_be_visible()  def test_login_failure_terms_not_accepted(page, page):     # Common setup for login tests     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')     page.set_viewport_size({\"width\": 1536, \"height\": 744})      # Locators     company_email_input = page.locator('[data-testid=\"company-email-input\"]')     password_input = page.locator('[data-testid=\"password-input\"]')     terms_checkbox = page.locator('.ant-checkbox-input')     sign_in_button = page.locator('button', has_text=\"Sign In\")     otp_first_input = page.locator('.ant-input-compact-first-item') # Next expected element after successful login      # Fill valid email and password     company_email_input.fill(\"test3\")     password_input.fill(\"value@123\")     # Do NOT accept Terms & Conditions      initial_url = page.url      # Click Sign In button     # Assuming the button is not disabled for this scenario based on JS file     sign_in_button.click()      # Assertions for negative login case     expect(page).to_have_url(initial_url)     expect(otp_first_input).not_to_be_visible() # OTP input should not be visible     expect(company_email_input).to_be_visible()     expect(password_input).to_be_visible()     expect(terms_checkbox).to_be_visible()     expect(sign_in_button).to_be_visible()  def test_login_failure_non_existent_email(page, page):     # Common setup for login tests     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')     page.set_viewport_size({\"width\": 1536, \"height\": 744})      # Locators     company_email_input = page.locator('[data-testid=\"company-email-input\"]')     password_input = page.locator('[data-testid=\"password-input\"]')     terms_checkbox = page.locator('.ant-checkbox-input')     sign_in_button = page.locator('button', has_text=\"Sign In\")     otp_first_input = page.locator('.ant-input-compact-first-item') # Next expected element after successful login      # Fill non-existent email     company_email_input.fill(f\"nonexistent_{datetime.now().strftime('%Y%m%d%H%M%S')}@example.com\")     # Fill valid password     password_input.fill(\"value@123\")      # Accept Terms & Conditions     terms_checkbox.click()      initial_url = page.url      # Click Sign In button     # Assuming the button is not disabled for this scenario based on JS file     sign_in_button.click()      # Assertions for negative login case     expect(page).to_have_url(initial_url)     expect(otp_first_input).not_to_be_visible() # OTP input should not be visible     expect(company_email_input).to_be_visible()     expect(password_input).to_be_visible()     expect(terms_checkbox).to_be_visible()     expect(sign_in_button).to_be_visible()  def test_login_failure_invalid_password(page, page):     # ===== STAGE 1: LOGIN & AUTHENTICATION (Negative Test) =====     # GOAL: Verify login failure with a valid email but incorrect password.     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')     page.set_viewport_size({\"width\": 1536, \"height\": 744})      # STEP 1: Enter valid company email.     page.locator('[data-testid=\"company-email-input\"]').fill(\"test3\")      # STEP 2: Enter an incorrect password.     page.locator('[data-testid=\"password-input\"]').fill(\"incorrect_password\")      # STEP 3: Accept the Terms & Conditions.     page.locator('.ant-checkbox-input').click()      # STEP 4: Attempt to submit invalid login credentials.     initial_url = page.url     sign_in_button = page.locator('button:has-text(\"Sign In\")')          # Check if button is disabled (though unlikely for invalid credentials, but per strict rule)     if sign_in_button.is_disabled():         expect(sign_in_button).to_be_disabled()     else:         sign_in_button.click()         # After clicking, check that the URL did not change         expect(page).to_have_url(initial_url)         # Check that the next expected element (OTP input) is NOT visible         expect(page.locator('.ant-input-compact-first-item')).not_to_be_visible()         # Assert that the current form fields/buttons are still visible         expect(page.locator('[data-testid=\"company-email-input\"]')).to_be_visible()         expect(page.locator('[data-testid=\"password-input\"]')).to_be_visible()         expect(page.locator('.ant-checkbox-input')).to_be_visible()         expect(sign_in_button).to_be_visible()  def test_login_failure_invalid_email(page, page):     # ===== STAGE 1: LOGIN & AUTHENTICATION (Negative Test) =====     # GOAL: Verify login failure with an incorrect email but correct password.     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')     page.set_viewport_size({\"width\": 1536, \"height\": 744})      # STEP 1: Enter an incorrect company email.     page.locator('[data-testid=\"company-email-input\"]').fill(\"incorrect@email.com\")      # STEP 2: Enter the corresponding valid password.     page.locator('[data-testid=\"password-input\"]').fill(\"value@123\")      # STEP 3: Accept the Terms & Conditions.     page.locator('.ant-checkbox-input').click()      # STEP 4: Attempt to submit invalid login credentials.     initial_url = page.url     sign_in_button = page.locator('button:has-text(\"Sign In\")')      # Check if button is disabled     if sign_in_button.is_disabled():         expect(sign_in_button).to_be_disabled()     else:         sign_in_button.click()         # After clicking, check that the URL did not change         expect(page).to_have_url(initial_url)         # Check that the next expected element (OTP input) is NOT visible         expect(page.locator('.ant-input-compact-first-item')).not_to_be_visible()         # Assert that the current form fields/buttons are still visible         expect(page.locator('[data-testid=\"company-email-input\"]')).to_be_visible()         expect(page.locator('[data-testid=\"password-input\"]')).to_be_visible()         expect(page.locator('.ant-checkbox-input')).to_be_visible()         expect(sign_in_button).to_be_visible()  def test_otp_verification_success(page, page):     # ===== STAGE 1: LOGIN & AUTHENTICATION (Prerequisite for OTP) =====     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')     page.set_viewport_size({\"width\": 1536, \"height\": 744})     page.locator('[data-testid=\"company-email-input\"]').fill(\"test3\")     page.locator('[data-testid=\"password-input\"]').fill(\"value@123\")     page.locator('.ant-checkbox-input').click()     with page.expect_navigation():         page.locator('button:has-text(\"Sign In\")').click()      # ===== STAGE 2: OTP VERIFICATION (Positive Test) =====     # GOAL: Successfully pass the Two-Factor Authentication step.     initial_url = page.url # This is the OTP page URL      # STEP 5: Enter a valid five-digit OTP.     page.locator('.ant-input-compact-first-item').fill(\"9\")     page.locator('.ant-input:nth-child(2)').fill(\"9\")     page.locator('.ant-input:nth-child(3)').fill(\"9\")     page.locator('.ant-input:nth-child(4)').fill(\"9\")     page.locator('.ant-input-compact-last-item').fill(\"9\")      # STEP 6: Submit the valid OTP. Expect navigation to the main application dashboard.     verify_button = page.locator('.ant-btn-default:has-text(\"Verify\")')     with page.expect_navigation():         verify_button.click()     expect(page).not_to_have_url(initial_url)  def test_otp_verification_failure_incorrect_code(page, page):     # ===== STAGE 1: LOGIN & AUTHENTICATION (Prerequisite for OTP) =====     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')     page.set_viewport_size({\"width\": 1536, \"height\": 744})     page.locator('[data-testid=\"company-email-input\"]').fill(\"test3\")     page.locator('[data-testid=\"password-input\"]').fill(\"value@123\")     page.locator('.ant-checkbox-input').click()     with page.expect_navigation():         page.locator('button:has-text(\"Sign In\")').click()      # ===== STAGE 2: OTP VERIFICATION (Negative Test) =====     # GOAL: Verify OTP verification failure with an incorrect 5-digit code.     initial_url = page.url # This is the OTP page URL      # STEP 5: Enter an incorrect five-digit OTP.     page.locator('.ant-input-compact-first-item').fill(\"1\")     page.locator('.ant-input:nth-child(2)').fill(\"2\")     page.locator('.ant-input:nth-child(3)').fill(\"3\")     page.locator('.ant-input:nth-child(4)').fill(\"4\")     page.locator('.ant-input-compact-last-item').fill(\"5\")      # STEP 6: Attempt to submit the invalid OTP.     verify_button = page.locator('.ant-btn-default:has-text(\"Verify\")')      # Check if button is disabled     if verify_button.is_disabled():         expect(verify_button).to_be_disabled()     else:         verify_button.click()         # After clicking, check that the URL did not change         expect(page).to_have_url(initial_url)         # Check that the next expected element (Instant Report card on dashboard) is NOT visible         expect(page.locator('.card:nth-child(1) > .overlay')).not_to_be_visible()         # Assert that the current form fields/buttons are still visible         expect(page.locator('.ant-input-compact-first-item')).to_be_visible()         expect(page.locator('.ant-input:nth-child(2)')).to_be_visible()         expect(page.locator('.ant-input:nth-child(3)')).to_be_visible()         expect(page.locator('.ant-input:nth-child(4)')).to_be_visible()         expect(page.locator('.ant-input-compact-last-item')).to_be_visible()         expect(verify_button).to_be_visible()  def test_otp_verification_failure_empty_field(page, page):     \"\"\"     Verify OTP verification fails when all OTP fields are left empty.     \"\"\"     _login_to_otp_page(page)      initial_url = page.url     # Using a more specific locator based on visible text as per JS comments     verify_button = page.locator('.ant-btn-default:has-text(\"Verify\")')      # Check if the button is disabled. For empty fields, it might be.     if verify_button.is_disabled():         expect(verify_button).to_be_disabled()     else:         verify_button.click()         # After clicking, check that the URL did not change         expect(page).to_have_url(initial_url)         # The next expected element in the flow (dashboard card) is NOT visible         expect(page.locator('.card:nth-child(1) > .overlay')).not_to_be_visible()         # Assert that the current form fields/buttons are still visible         expect(page.locator('.ant-input-compact-first-item')).to_be_visible()         expect(page.locator('.ant-input:nth-child(2)')).to_be_visible()         expect(page.locator('.ant-input:nth-child(3)')).to_be_visible()         expect(page.locator('.ant-input:nth-child(4)')).to_be_visible()         expect(page.locator('.ant-input-compact-last-item')).to_be_visible()         expect(verify_button).to_be_visible()  def test_otp_verification_failure_partially_entered(page, page):     \"\"\"     Verify OTP verification fails with a partially entered OTP.     \"\"\"     _login_to_otp_page(page)      # Fill only the first two OTP fields with arbitrary digits     page.locator('.ant-input-compact-first-item').fill(\"1\")     page.locator('.ant-input:nth-child(2)').fill(\"2\")      initial_url = page.url     verify_button = page.locator('.ant-btn-default:has-text(\"Verify\")')      if verify_button.is_disabled():         expect(verify_button).to_be_disabled()     else:         verify_button.click()         expect(page).to_have_url(initial_url)         expect(page.locator('.card:nth-child(1) > .overlay')).not_to_be_visible()         expect(page.locator('.ant-input-compact-first-item')).to_be_visible()         expect(page.locator('.ant-input:nth-child(2)')).to_be_visible()         expect(page.locator('.ant-input:nth-child(3)')).to_be_visible()         expect(page.locator('.ant-input:nth-child(4)')).to_be_visible()         expect(page.locator('.ant-input-compact-last-item')).to_be_visible()         expect(verify_button).to_be_visible()  def test_otp_verification_failure_multiple_incorrect_attempts(page, page):     \"\"\"     Verify OTP verification failure after multiple incorrect OTP attempts.     (Simulates repeated invalid entries, cannot assert specific \"account lockout\" without UI elements for it).     \"\"\"     _login_to_otp_page(page)      initial_url = page.url     verify_button = page.locator('.ant-btn-default:has-text(\"Verify\")')          # Simulate multiple incorrect attempts (e.g., 3 attempts)     for i in range(3):         # Clear fields before filling for each attempt to simulate a new try         page.locator('.ant-input-compact-first-item').fill(\"\")         page.locator('.ant-input:nth-child(2)').fill(\"\")         page.locator('.ant-input:nth-child(3)').fill(\"\")         page.locator('.ant-input:nth-child(4)').fill(\"\")         page.locator('.ant-input-compact-last-item').fill(\"\")          # Fill with an invalid OTP (e.g., \"11111\")         page.locator('.ant-input-compact-first-item').fill(\"1\")         page.locator('.ant-input:nth-child(2)').fill(\"1\")         page.locator('.ant-input:nth-child(3)').fill(\"1\")         page.locator('.ant-input:nth-child(4)').fill(\"1\")         page.locator('.ant-input-compact-last-item').fill(\"1\")          if verify_button.is_disabled():             expect(verify_button).to_be_disabled()             # If the button becomes disabled, further attempts won't change the state             break         else:             verify_button.click()             # After clicking, check that the URL did not change             expect(page).to_have_url(initial_url)             # The next expected element in the flow (dashboard card) is NOT visible             expect(page.locator('.card:nth-child(1) > .overlay')).not_to_be_visible()             # Assert that the current form fields/buttons are still visible             expect(page.locator('.ant-input-compact-first-item')).to_be_visible()             expect(page.locator('.ant-input:nth-child(2)')).to_be_visible()             expect(page.locator('.ant-input:nth-child(3)')).to_be_visible()             expect(page.locator('.ant-input:nth-child(4)')).to_be_visible()             expect(page.locator('.ant-input-compact-last-item')).to_be_visible()             expect(verify_button).to_be_visible()      # Final assertion after all attempts: still on OTP page, dashboard not visible     expect(page).to_have_url(initial_url)     expect(page.locator('.card:nth-child(1) > .overlay')).not_to_be_visible()     # The button should still be visible, or disabled if lockout occurred (cannot assert lockout directly)     expect(verify_button).to_be_visible()   def test_otp_verification_failure_expired_code(page, page):     \"\"\"     Verify OTP verification failure with an expired OTP code.     (Interpreted as entering an invalid OTP code, as no mechanism to simulate expiration or specific UI for it is provided).     \"\"\"     _login_to_otp_page(page)      # Fill with a different invalid OTP (e.g., \"12345\")     page.locator('.ant-input-compact-first-item').fill(\"1\")     page.locator('.ant-input:nth-child(2)').fill(\"2\")     page.locator('.ant-input:nth-child(3)').fill(\"3\")     page.locator('.ant-input:nth-child(4)').fill(\"4\")     page.locator('.ant-input-compact-last-item').fill(\"5\")      initial_url = page.url     verify_button = page.locator('.ant-btn-default:has-text(\"Verify\")')      if verify_button.is_disabled():         expect(verify_button).to_be_disabled()     else:         verify_button.click()         expect(page).to_have_url(initial_url)         expect(page.locator('.card:nth-child(1) > .overlay')).not_to_be_visible()         expect(page.locator('.ant-input-compact-first-item')).to_be_visible()         expect(page.locator('.ant-input:nth-child(2)')).to_be_visible()         expect(page.locator('.ant-input:nth-child(3)')).to_be_visible()         expect(page.locator('.ant-input:nth-child(4)')).to_be_visible()         expect(page.locator('.ant-input-compact-last-item')).to_be_visible()         expect(verify_button).to_be_visible()  def test_verify_navigation_to_otp_page_after_successful_login_credentials_submission(page, page):     # GOAL: Navigate to the application's login page and authenticate the user.     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')      # SETUP: Set a consistent desktop viewport for reliable element locating.     page.set_viewport_size({\"width\": 1536, \"height\": 744})      initial_url = page.url      # STEP 1: Enter valid company email for a known test account.     page.locator('[data-testid=\"company-email-input\"]').fill(\"test3\")      # STEP 2: Enter the corresponding valid password for the test account.     page.locator('[data-testid=\"password-input\"]').fill(\"value@123\")      # STEP 3: Accept the Terms & Conditions, a required step for login.     page.locator('.ant-checkbox-input').click()      # STEP 4: Submit the valid login credentials. Expect navigation to the OTP verification page.     with page.expect_navigation():         page.locator('button:has-text(\"Sign In\")').click()      expect(page).not_to_have_url(initial_url)  def test_verify_navigation_to_dashboard_after_successful_otp_verification(page, page):     # GOAL: Navigate to the application's login page and authenticate the user.     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')      # SETUP: Set a consistent desktop viewport for reliable element locating.     page.set_viewport_size({\"width\": 1536, \"height\": 744})      # STEP 1: Enter valid company email for a known test account.     page.locator('[data-testid=\"company-email-input\"]').fill(\"test3\")      # STEP 2: Enter the corresponding valid password for the test account.     page.locator('[data-testid=\"password-input\"]').fill(\"value@123\")      # STEP 3: Accept the Terms & Conditions, a required step for login.     page.locator('.ant-checkbox-input').click()      # STEP 4: Submit the valid login credentials. Expect navigation to the OTP verification page.     with page.expect_navigation():         page.locator('button:has-text(\"Sign In\")').click()      # ===== STAGE 2: OTP VERIFICATION =====     initial_url = page.url # Now on OTP page      # STEP 5: Enter a valid five-digit OTP to complete authentication.     page.locator('.ant-input-compact-first-item').fill(\"9\")     page.locator('.ant-input:nth-child(2)').fill(\"9\")     page.locator('.ant-input:nth-child(3)').fill(\"9\")     page.locator('.ant-input:nth-child(4)').fill(\"9\")     page.locator('.ant-input-compact-last-item').fill(\"9\")      # STEP 6: Submit the valid OTP. Expect navigation to the main application dashboard.     with page.expect_navigation():         page.locator('.ant-btn-default:has-text(\"Verify\")').click()      expect(page).not_to_have_url(initial_url)  def test_verify_error_message_display_for_invalid_login_credentials(page, page):     # GOAL: Test invalid login credentials and verify no navigation occurs.     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')      # SETUP: Set a consistent desktop viewport for reliable element locating.     page.set_viewport_size({\"width\": 1536, \"height\": 744})      # STEP 1: Enter invalid company email.     page.locator('[data-testid=\"company-email-input\"]').fill(\"invalid@example.com\")      # STEP 2: Enter invalid password.     page.locator('[data-testid=\"password-input\"]').fill(\"wrongpassword\")      # STEP 3: Accept the Terms & Conditions.     page.locator('.ant-checkbox-input').click()      # STEP 4: Attempt to submit invalid login credentials.     submit_button = page.locator('button:has-text(\"Sign In\")')      if submit_button.is_disabled():         expect(submit_button).to_be_disabled()     else:         initial_url = page.url         submit_button.click()         # After clicking, check that the URL did not change         expect(page).to_have_url(initial_url)         # The next expected element in the flow (OTP input) should NOT be visible         expect(page.locator('.ant-input-compact-first-item')).not_to_be_visible()         # Assert that the current form fields/buttons are still visible         expect(page.locator('[data-testid=\"company-email-input\"]')).to_be_visible()         expect(page.locator('[data-testid=\"password-input\"]')).to_be_visible()         expect(submit_button).to_be_visible()  def test_verify_error_message_display_for_invalid_otp_code(page, page):     # GOAL: Test invalid OTP code and verify no navigation occurs.     page.goto('https://valueinsightpro.jumpiq.com/auth/login?redirect=/')      # SETUP: Set a consistent desktop viewport for reliable element locating.     page.set_viewport_size({\"width\": 1536, \"height\": 744})      # STEP 1: Enter valid company email for a known test account.     page.locator('[data-testid=\"company-email-input\"]').fill(\"test3\")      # STEP 2: Enter the corresponding valid password for the test account.     page.locator('[data-testid=\"password-input\"]').fill(\"value@123\")      # STEP 3: Accept the Terms & Conditions, a required step for login.     page.locator('.ant-checkbox-input').click()      # STEP 4: Submit the valid login credentials to reach OTP page.     with page.expect_navigation():         page.locator('button:has-text(\"Sign In\")').click()      # ===== STAGE 2: OTP VERIFICATION (Negative Test) =====     initial_url = page.url # Now on OTP page      # STEP 5: Enter an invalid five-digit OTP.     page.locator('.ant-input-compact-first-item').fill(\"1\")     page.locator('.ant-input:nth-child(2)').fill(\"2\")     page.locator('.ant-input:nth-child(3)').fill(\"3\")     page.locator('.ant-input:nth-child(4)').fill(\"4\")     page.locator('.ant-input-compact-last-item').fill(\"5\")      # STEP 6: Attempt to submit the invalid OTP.     submit_button = page.locator('.ant-btn-default:has-text(\"Verify\")')      if submit_button.is_disabled():         expect(submit_button).to_be_disabled()     else:         submit_button.click()         # After clicking, check that the URL did not change         expect(page).to_have_url(initial_url)         # The next expected element in the flow (Instant Report card on dashboard) should NOT be visible         expect(page.locator('.card:nth-child(1) > .overlay')).not_to_be_visible()         # Assert that the current OTP fields and button are still visible         expect(page.locator('.ant-input-compact-first-item')).to_be_visible()         expect(page.locator('.ant-input:nth-child(2)')).to_be_visible()         expect(page.locator('.ant-input:nth-child(3)')).to_be_visible()         expect(page.locator('.ant-input:nth-child(4)')).to_be_visible()         expect(page.locator('.ant-input-compact-last-item')).to_be_visible()         expect(submit_button).to_be_visible()  \u25b6\ufe0f Run Test Cases & View Logs \u2699\ufe0f Advanced Run Settings   Error running script: { \"details\": \"No report generated.\", \"error\": \"Test execution failed\", \"healing_attempts\": [], \"stderr\": \"\", \"stdout\": \"============================= test session starts ==============================\\nplatform linux -- Python 3.12.3, pytest-8.4.0, pluggy-1.6.0\\nrootdir: /tmp/tmpd40ulh2d\\nplugins: metadata-3.1.1, anyio-4.9.0, json-report-1.5.0\\ncollected 0 items / 1 error\\n\\n==================================== ERRORS ====================================\\n_______________________ ERROR collecting test_script.py ________________________\\n/home/shtlp_0133/Desktop/Dev_Code_Test_suite/venv/lib/python3.12/site-packages/_pytest/python.py:497: in importtestmodule\\n mod = import_path(\\n/home/shtlp_0133/Desktop/Dev_Code_Test_suite/venv/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path\\n importlib.import_module(module_name)\\n/usr/lib/python3.12/importlib/init.py:90: in import_module\\n return _bootstrap._gcd_import(name[level:], package, level)\\n ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n<frozen importlib._bootstrap>:1387: in _gcd_import\\n ???\\n<frozen importlib._bootstrap>:1360: in _find_and_load\\n ???\\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\\n ???\\n<frozen importlib._bootstrap>:935: in _load_unlocked\\n ???\\n/home/shtlp_0133/Desktop/Dev_Code_Test_suite/venv/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module\\n source_stat, co = _rewrite_test(fn, self.config)\\n ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/home/shtlp_0133/Desktop/Dev_Code_Test_suite/venv/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:359: in _rewrite_test\\n co = compile(tree, strfn, \"exec\", dont_inherit=True)\\n ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nE File \"/tmp/tmpd40ulh2d/test_script.py\", line 18\\nE def test_successful_login_valid_credentials(page, page):\\nE ^^^^\\nE SyntaxError: duplicate argument 'page' in function definition\\n=========================== short test summary info ============================\\nERROR test_script.py\\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\\n=============================== 1 error in 0.14s ===============================\\n\" }  Error: Failed to run script  \ud83d\udccb Test Results   \tTest Case\tResult\tDuration 0\tError\tFailed to run script\t0s Test Results  0/0 Passed 0 Failed or Errored \ud83d\udce5 Download Results   \ud83d\udd0d Debug & Logs    Made with Streamlit"}
2025-06-25 13:23:32 | INFO     | QA-Suite | user_action:150 | USER ACTION: uploaded_js_file | Context: {"filename": "jump_full_flow.js", "file_size": 10432}
2025-06-25 13:23:32 | INFO     | QA-Suite | step:108 | STEP [2/7] Upload JS File | Context: {"filename": "jump_full_flow.js", "file_size": 10432}
2025-06-25 13:23:37 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_test_ideas | Context: {"functionality": "For login only"}
2025-06-25 13:23:46 | INFO     | QA-Suite | api_call:124 | API POST /generate_test_ideas | Status: 200 | Time: 8.79s | Context: {"functionality": "For login only", "js_content_length": 10432}
2025-06-25 13:23:46 | INFO     | QA-Suite | performance:157 | PERFORMANCE test_ideas_generation_ui | Duration: 8.79s | Context: {"functionality": "For login only", "test_ideas_count": 20}
2025-06-25 13:23:46 | INFO     | QA-Suite | step:108 | STEP [3/7] Generate Test Ideas | Context: {"functionality": "For login only", "test_ideas_count": 20}
2025-06-25 13:23:50 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_script | Context: {"selected_tests_count": 20, "selected_tests": ["Verify successful login with valid company email, password, and accepted T&C.", "Verify login failure with an invalid company email format.", "Verify login failure with an incorrect password for a valid email.", "Verify login failure with a non-existent company email.", "Verify login failure when the company email field is left empty.", "Verify login failure when the password field is left empty.", "Verify login failure when both company email and password fields are empty.", "Verify login failure when Terms & Conditions are not accepted.", "Verify the display of appropriate error messages for invalid login attempts.", "Verify that the 'Sign In' button is disabled until all required fields are valid and T&C accepted.", "Verify successful navigation to OTP verification page after valid login credentials.", "Verify successful OTP verification with a valid 5-digit code.", "Verify OTP verification failure with an incorrect 5-digit code.", "Verify OTP verification failure when all OTP input fields are left empty.", "Verify OTP verification failure when fewer than 5 digits are entered.", "Verify OTP verification failure when non-numeric characters are entered into OTP fields.", "Verify the display of appropriate error messages for invalid OTP attempts.", "Verify the 'Resend OTP' functionality (if available) on the OTP verification page.", "Verify navigation to the main application dashboard after successful OTP verification.", "Verify that the user remains on the OTP page after an invalid OTP attempt."]}
2025-06-25 13:25:35 | INFO     | QA-Suite | api_call:124 | API POST /generate_script | Status: 200 | Time: 105.47s | Context: {"website_url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/", "selected_tests_count": 20}
2025-06-25 13:25:35 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_generation_ui | Duration: 105.47s | Context: {"selected_tests_count": 20, "script_length": 28063}
2025-06-25 13:25:35 | INFO     | QA-Suite | step:108 | STEP [4/7] Generate Script | Context: {"selected_tests_count": 20, "script_length": 28063}
2025-06-25 13:26:28 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_run_script | Context: {"script_length": 28063}
2025-06-25 13:27:00 | INFO     | QA-Suite | api_call:124 | API POST /run_script | Status: 400 | Time: 32.33s | Context: {"script_length": 28063}
2025-06-25 13:27:00 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_execution_ui | Duration: 32.33s | Context: {"script_length": 28063}
2025-06-25 13:27:00 | INFO     | QA-Suite | step:108 | STEP [6/7] Run Tests | Context: {"logs_count": 1, "stats": {"passed": 0, "failed": 0, "total": 0}}
2025-06-25 13:27:00 | INFO     | QA-Suite | user_action:150 | USER ACTION: downloaded_results | Context: {"script_length": 28063, "logs_count": 1}
2025-06-25 13:27:00 | INFO     | QA-Suite | step:108 | STEP [7/7] Download Results | Context: {"script_length": 28063, "logs_count": 1}
2025-06-25 13:30:03 | INFO     | QA-Suite | user_action:150 | USER ACTION: entered_website_url | Context: {"url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/"}
2025-06-25 13:30:03 | INFO     | QA-Suite | step:108 | STEP [1/7] Enter Website URL | Context: {"url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/"}
2025-06-25 13:30:07 | INFO     | QA-Suite | user_action:150 | USER ACTION: uploaded_js_file | Context: {"filename": "jump_full_flow.js", "file_size": 10432}
2025-06-25 13:30:07 | INFO     | QA-Suite | step:108 | STEP [2/7] Upload JS File | Context: {"filename": "jump_full_flow.js", "file_size": 10432}
2025-06-25 13:30:13 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_test_ideas | Context: {"functionality": "For full flow"}
2025-06-25 13:30:23 | INFO     | QA-Suite | api_call:124 | API POST /generate_test_ideas | Status: 200 | Time: 10.41s | Context: {"functionality": "For full flow", "js_content_length": 10432}
2025-06-25 13:30:23 | INFO     | QA-Suite | performance:157 | PERFORMANCE test_ideas_generation_ui | Duration: 10.41s | Context: {"functionality": "For full flow", "test_ideas_count": 20}
2025-06-25 13:30:23 | INFO     | QA-Suite | step:108 | STEP [3/7] Generate Test Ideas | Context: {"functionality": "For full flow", "test_ideas_count": 20}
2025-06-25 13:30:34 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_test_ideas | Context: {"functionality": "For login only"}
2025-06-25 13:30:43 | INFO     | QA-Suite | api_call:124 | API POST /generate_test_ideas | Status: 200 | Time: 8.98s | Context: {"functionality": "For login only", "js_content_length": 10432}
2025-06-25 13:30:43 | INFO     | QA-Suite | performance:157 | PERFORMANCE test_ideas_generation_ui | Duration: 8.98s | Context: {"functionality": "For login only", "test_ideas_count": 20}
2025-06-25 13:30:45 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_script | Context: {"selected_tests_count": 20, "selected_tests": ["Verify successful user login with valid credentials and accepted Terms & Conditions.", "Verify login failure when 'Company Email' field is left empty.", "Verify login failure when 'Password' field is left empty.", "Verify login failure when both 'Company Email' and 'Password' fields are empty.", "Verify login failure with an invalid format for 'Company Email'.", "Verify login failure with an incorrect password for a valid email.", "Verify login failure when Terms & Conditions checkbox is not selected.", "Verify error message display for invalid 'Company Email' input.", "Verify error message display for incorrect 'Password' input.", "Verify error message display for empty 'Company Email' field.", "Verify error message display for empty 'Password' field.", "Verify navigation to OTP verification page after successful login credentials submission.", "Verify successful OTP verification with a valid 5-digit OTP.", "Verify OTP verification failure with an incorrect 5-digit OTP.", "Verify OTP verification failure when any OTP input field is left empty.", "Verify OTP verification failure with an OTP containing non-numeric characters.", "Verify OTP verification failure with an OTP that is shorter than 5 digits.", "Verify OTP verification failure with an OTP that is longer than 5 digits.", "Verify behavior when attempting to verify an expired OTP.", "Verify account lockout or rate limiting after multiple incorrect OTP attempts."]}
2025-06-25 13:31:35 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_script | Context: {"selected_tests_count": 20, "selected_tests": ["Verify successful user login with valid credentials and accepted Terms & Conditions.", "Verify login failure when 'Company Email' field is left empty.", "Verify login failure when 'Password' field is left empty.", "Verify login failure when both 'Company Email' and 'Password' fields are empty.", "Verify login failure with an invalid format for 'Company Email'.", "Verify login failure with an incorrect password for a valid email.", "Verify login failure when Terms & Conditions checkbox is not selected.", "Verify error message display for invalid 'Company Email' input.", "Verify error message display for incorrect 'Password' input.", "Verify error message display for empty 'Company Email' field.", "Verify error message display for empty 'Password' field.", "Verify navigation to OTP verification page after successful login credentials submission.", "Verify successful OTP verification with a valid 5-digit OTP.", "Verify OTP verification failure with an incorrect 5-digit OTP.", "Verify OTP verification failure when any OTP input field is left empty.", "Verify OTP verification failure with an OTP containing non-numeric characters.", "Verify OTP verification failure with an OTP that is shorter than 5 digits.", "Verify OTP verification failure with an OTP that is longer than 5 digits.", "Verify behavior when attempting to verify an expired OTP.", "Verify account lockout or rate limiting after multiple incorrect OTP attempts."]}
2025-06-25 14:09:58 | INFO     | QA-Suite | user_action:150 | USER ACTION: entered_website_url | Context: {"url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/"}
2025-06-25 14:09:58 | INFO     | QA-Suite | step:108 | STEP [1/7] Enter Website URL | Context: {"url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/"}
2025-06-25 14:10:05 | INFO     | QA-Suite | user_action:150 | USER ACTION: uploaded_js_file | Context: {"filename": "jump_full_flow.js", "file_size": 10432}
2025-06-25 14:10:05 | INFO     | QA-Suite | step:108 | STEP [2/7] Upload JS File | Context: {"filename": "jump_full_flow.js", "file_size": 10432}
2025-06-25 14:10:09 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_test_ideas | Context: {"functionality": "Login flow"}
2025-06-25 14:10:16 | INFO     | QA-Suite | api_call:124 | API POST /generate_test_ideas | Status: 200 | Time: 6.37s | Context: {"functionality": "Login flow", "js_content_length": 10432}
2025-06-25 14:10:16 | INFO     | QA-Suite | performance:157 | PERFORMANCE test_ideas_generation_ui | Duration: 6.37s | Context: {"functionality": "Login flow", "test_ideas_count": 20}
2025-06-25 14:10:16 | INFO     | QA-Suite | step:108 | STEP [3/7] Generate Test Ideas | Context: {"functionality": "Login flow", "test_ideas_count": 20}
2025-06-25 14:10:49 | INFO     | QA-Suite | api_call:124 | API POST /generate_script | Status: 200 | Time: 2403.82s | Context: {"website_url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/", "selected_tests_count": 20}
2025-06-25 14:11:30 | INFO     | QA-Suite | api_call:124 | API POST /generate_script | Status: 200 | Time: 2395.40s | Context: {"website_url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/", "selected_tests_count": 20}
2025-06-25 14:12:11 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_script | Context: {"selected_tests_count": 20, "selected_tests": ["Verify successful navigation to the login page.", "Test login with valid company email, password, and accepted T&C.", "Verify error message for login with an invalid company email format.", "Verify error message for login with a non-existent company email.", "Test login attempt with an empty company email field.", "Test login attempt with an empty password field.", "Verify error message for login with an incorrect password.", "Test login attempt without accepting Terms & Conditions.", "Verify login button state when required fields are not filled.", "Test login with valid credentials containing leading/trailing spaces in email.", "Test login with valid credentials containing leading/trailing spaces in password.", "Verify successful navigation to OTP verification page after valid login.", "Test OTP verification with a valid five-digit code.", "Verify error message for OTP verification with an incorrect code.", "Test OTP verification attempt with an empty OTP field.", "Verify error message for an expired OTP code.", "Test OTP input fields accept only numeric characters.", "Verify 'Resend OTP' functionality is available and works.", "Test OTP verification with a partially entered code.", "Verify successful navigation to the main application dashboard after valid OTP."]}
2025-06-25 14:14:18 | INFO     | QA-Suite | api_call:124 | API POST /generate_script | Status: 200 | Time: 127.19s | Context: {"website_url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/", "selected_tests_count": 20}
2025-06-25 14:14:18 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_generation_ui | Duration: 127.19s | Context: {"selected_tests_count": 20, "script_length": 31514}
2025-06-25 14:14:18 | INFO     | QA-Suite | step:108 | STEP [4/7] Generate Script | Context: {"selected_tests_count": 20, "script_length": 31514}
2025-06-25 14:14:21 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_run_script | Context: {"script_length": 31514}
2025-06-25 14:14:54 | INFO     | QA-Suite | api_call:124 | API POST /run_script | Status: 400 | Time: 32.44s | Context: {"script_length": 31514}
2025-06-25 14:14:54 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_execution_ui | Duration: 32.44s | Context: {"script_length": 31514}
2025-06-25 14:14:54 | INFO     | QA-Suite | step:108 | STEP [6/7] Run Tests | Context: {"logs_count": 1, "stats": {"passed": 0, "failed": 0, "total": 0}}
2025-06-25 14:14:54 | INFO     | QA-Suite | user_action:150 | USER ACTION: downloaded_results | Context: {"script_length": 31514, "logs_count": 1}
2025-06-25 14:14:54 | INFO     | QA-Suite | step:108 | STEP [7/7] Download Results | Context: {"script_length": 31514, "logs_count": 1}
2025-06-25 14:16:34 | INFO     | QA-Suite | user_action:150 | USER ACTION: entered_website_url | Context: {"url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/"}
2025-06-25 14:16:34 | INFO     | QA-Suite | step:108 | STEP [1/7] Enter Website URL | Context: {"url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/"}
2025-06-25 14:16:38 | INFO     | QA-Suite | user_action:150 | USER ACTION: uploaded_js_file | Context: {"filename": "jump_full_flow.js", "file_size": 10432}
2025-06-25 14:16:38 | INFO     | QA-Suite | step:108 | STEP [2/7] Upload JS File | Context: {"filename": "jump_full_flow.js", "file_size": 10432}
2025-06-25 14:16:43 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_test_ideas | Context: {"functionality": "Just login flow"}
2025-06-25 14:16:53 | INFO     | QA-Suite | api_call:124 | API POST /generate_test_ideas | Status: 200 | Time: 10.56s | Context: {"functionality": "Just login flow", "js_content_length": 10432}
2025-06-25 14:16:53 | INFO     | QA-Suite | performance:157 | PERFORMANCE test_ideas_generation_ui | Duration: 10.56s | Context: {"functionality": "Just login flow", "test_ideas_count": 20}
2025-06-25 14:16:53 | INFO     | QA-Suite | step:108 | STEP [3/7] Generate Test Ideas | Context: {"functionality": "Just login flow", "test_ideas_count": 20}
2025-06-25 14:16:59 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_generate_script | Context: {"selected_tests_count": 20, "selected_tests": ["Verify successful user login with valid credentials and T&C acceptance.", "Verify navigation to OTP verification page after successful login attempt.", "Verify successful OTP verification with a valid five-digit code.", "Verify navigation to the application dashboard after successful OTP verification.", "Verify login failure when entering an invalid company email.", "Verify login failure when entering an incorrect password for a valid email.", "Verify login failure when both email and password fields are left empty.", "Verify login failure when the company email field is empty.", "Verify login failure when the password field is empty.", "Verify login failure when Terms & Conditions checkbox is not selected.", "Verify error message display for invalid login credentials.", "Verify OTP verification failure with an incorrect five-digit code.", "Verify OTP verification failure when all OTP input fields are empty.", "Verify OTP verification failure when OTP is partially entered.", "Verify OTP verification failure with non-numeric characters in OTP fields.", "Verify error message display for invalid OTP.", "Verify the 'Sign In' button state (enabled/disabled) based on input validity and T&C acceptance.", "Verify the 'Verify' button state (enabled/disabled) based on OTP input completion.", "Verify the login page loads correctly with all input fields and buttons visible.", "Verify the OTP verification page loads correctly with all input fields and buttons visible."]}
2025-06-25 14:18:52 | INFO     | QA-Suite | api_call:124 | API POST /generate_script | Status: 200 | Time: 113.13s | Context: {"website_url": "https://valueinsightpro.jumpiq.com/auth/login?redirect=/", "selected_tests_count": 20}
2025-06-25 14:18:52 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_generation_ui | Duration: 113.13s | Context: {"selected_tests_count": 20, "script_length": 27760}
2025-06-25 14:18:52 | INFO     | QA-Suite | step:108 | STEP [4/7] Generate Script | Context: {"selected_tests_count": 20, "script_length": 27760}
2025-06-25 14:19:22 | INFO     | QA-Suite | user_action:150 | USER ACTION: clicked_run_script | Context: {"script_length": 27760}
2025-06-25 14:19:54 | INFO     | QA-Suite | api_call:124 | API POST /run_script | Status: 400 | Time: 32.41s | Context: {"script_length": 27760}
2025-06-25 14:19:54 | INFO     | QA-Suite | performance:157 | PERFORMANCE script_execution_ui | Duration: 32.41s | Context: {"script_length": 27760}
2025-06-25 14:19:54 | INFO     | QA-Suite | step:108 | STEP [6/7] Run Tests | Context: {"logs_count": 1, "stats": {"passed": 0, "failed": 0, "total": 0}}
2025-06-25 14:19:54 | INFO     | QA-Suite | user_action:150 | USER ACTION: downloaded_results | Context: {"script_length": 27760, "logs_count": 1}
2025-06-25 14:19:54 | INFO     | QA-Suite | step:108 | STEP [7/7] Download Results | Context: {"script_length": 27760, "logs_count": 1}
