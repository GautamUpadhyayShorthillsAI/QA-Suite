2025-06-24 10:28:37 | INFO     | Frontend | info:76 | Starting QA-Suite Frontend | Context: {"streamlit_version": "1.24.0", "python_version": "3.12.3 (main, May 26 2025, 18:50:19) [GCC 13.3.0]"}
2025-06-24 10:28:37 | INFO     | Frontend | info:76 | JS file uploaded and processed | Context: {"filename": "jump_full_flow.js", "file_size": 10540, "content_length": 10540}
2025-06-24 10:28:37 | INFO     | Frontend | info:76 | Making API call to run script | Context: {"script_length": 10348}
2025-06-24 10:29:32 | ERROR    | Frontend | error:94 | Failed to run script | Context: {"status_code": 400, "response_text": "{\n  \"details\": \"No report generated.\",\n  \"error\": \"Test execution failed\",\n  \"healing_attempts\": [],\n  \"stderr\": \"\",\n  \"stdout\": \"============================= test session starts ==============================\\nplatform linux -- Python 3.12.3, pytest-8.4.0, pluggy-1.6.0\\nrootdir: /tmp/tmplatokewr\\nplugins: metadata-3.1.1, anyio-4.9.0, json-report-1.5.0\\ncollected 1 item\\n\\ntest_script.py ERROR in test_complete_end_to_end_workflow: Dumping DOM for analysis.\\nDOM content successfully dumped to /tmp/tmplatokewr/dom_on_failure.html\\nF\\n\\n=================================== FAILURES ===================================\\n______________________ test_complete_end_to_end_workflow _______________________\\n\\npage = <Page url='https://valueinsightpro.jumpiq.com/JumpFive/Valuations/ValuationEdit/17517'>\\n\\n    def test_complete_end_to_end_workflow(page):\\n    \\n      try:\\n         # ===== STAGE 1: LOGIN & AUTHENTICATION =====\\n    \\n          # GOAL: Navigate to the application's login page and authenticate the user.\\n          page.goto(\\\"https://valueinsightpro.jumpiq.com/auth/login?redirect=/\\\")\\n    \\n          # SETUP: Set a consistent desktop viewport for reliable element locating.\\n          page.set_viewport_size({\\\"width\\\": 1536, \\\"height\\\": 744})\\n    \\n          # STEP 1: Enter valid company email for a known test account.\\n          # Note: Using data-testid selector which is robust and reliable.\\n          page.get_by_test_id(\\\"company-email-input\\\").click()\\n          page.get_by_test_id(\\\"company-email-input\\\").fill(\\\"test3\\\")\\n    \\n          # STEP 2: Enter the corresponding valid password for the test account.\\n          # Note: Using data-testid selector which is robust and reliable.\\n          page.get_by_test_id(\\\"password-input\\\").click()\\n          page.get_by_test_id(\\\"password-input\\\").fill(\\\"value@123\\\")\\n    \\n          # STEP 3: Accept the Terms & Conditions, a required step for login.\\n          # Note: The selector '.ant-checkbox-input' is generic and may be brittle.\\n          page.locator(\\\".ant-checkbox-input\\\").click()\\n    \\n          # STEP 4: Submit the valid login credentials. Expect navigation to the OTP verification page.\\n          # Note: The selector 'button' is generic. The button's visible text is \\\"Sign In\\\".\\n          with page.expect_navigation():\\n            page.locator(\\\"button\\\").click()\\n    \\n          # ===== STAGE 2: OTP VERIFICATION =====\\n    \\n          # GOAL: Successfully pass the Two-Factor Authentication step.\\n          # STEP 5: Enter a valid five-digit OTP to complete authentication.\\n          # Note: These selectors are based on element structure and are brittle.\\n          # They target individual input fields in a compact input group.\\n          page.locator(\\\".ant-input-compact-first-item\\\").click()\\n          page.locator(\\\".ant-input-compact-first-item\\\").fill(\\\"9\\\")\\n          page.locator(\\\".ant-input:nth-child(2)\\\").fill(\\\"9\\\")\\n          page.locator(\\\".ant-input:nth-child(3)\\\").fill(\\\"9\\\")\\n          page.locator(\\\".ant-input:nth-child(4)\\\").fill(\\\"9\\\")\\n          page.locator(\\\".ant-input-compact-last-item\\\").fill(\\\"9\\\")\\n    \\n          # STEP 6: Submit the valid OTP. Expect navigation to the main application dashboard.\\n          # Note: The selector '.ant-btn-default' is generic. The button's visible text is \\\"Verify\\\".\\n          with page.expect_navigation():\\n            page.locator(\\\".ant-btn-default\\\").click()\\n    \\n          # ===== STAGE 3: INSTANT REPORT CREATION =====\\n    \\n          # GOAL: Initiate and configure a new \\\"Instant Report\\\" for a dealership.\\n          # STEP 7: From the dashboard, select the 'Instant Report' workflow card.\\n          # Note: The selector '.card:nth-child(1) > .overlay' targets the first card's overlay area.\\n          page.locator(\\\".card:nth-child(1) > .overlay\\\").click()\\n    \\n          # STEP 8: Open the dealership selection dropdown menu in the 'Create Instant Report' modal.\\n          # Note: Using ID selector which is more reliable than class-based selectors.\\n          page.locator(\\\"#home_screen_new_val_drop_down\\\").click()\\n    \\n          # STEP 9: Select a specific dealership from the dropdown list.\\n          # Note: This selector is brittle as it depends on the active state. The visible text is \\\"1 BROOKVILLE CHEVROLET-Ch...\\\".\\n          page.locator(\\\".ant-select-item-option-active > .ant-select-item-option-content\\\").click()\\n    \\n          # STEP 10: Proceed to the next step in the report creation wizard.\\n          # Note: The locator 'text=Next' is robust as it uses visible text.\\n          with page.expect_navigation():\\n            page.get_by_text(\\\"Next\\\").click()\\n    \\n          # ===== STAGE 4: REPORT CONFIGURATION =====\\n    \\n          # GOAL: Configure the report settings and parameters.\\n          # STEP 11: Navigate to step 4 in the multi-step report configuration process.\\n          # Note: The selector targets the 4th step icon in the progress indicator.\\n          page.locator(\\\".ant-steps-item:nth-child(4) .ant-steps-item-icon\\\").click()\\n    \\n          # STEP 12: Select the second tab option in the configuration interface.\\n          # Note: The selector targets a radio button within a tab structure.\\n          page.locator(\\\"#rc-tabs-1-tab-tab2 .ant-radio-inner\\\").click()\\n    \\n          # STEP 13-16: Perform scrolling operations to navigate through the configuration interface.\\n          # These scroll operations help users navigate through long forms or content areas.\\n          page.mouse.wheel(0, 284)\\n          page.mouse.wheel(0, -204)\\n          page.mouse.wheel(0, 4)\\n          page.mouse.wheel(0, -310)\\n    \\n          # STEP 17: Navigate to step 5 in the configuration process.\\n          page.locator(\\\".ant-steps-item:nth-child(5) .ant-steps-item-icon\\\").click()\\n    \\n          # STEP 18: Navigate to step 6 in the configuration process.\\n          page.locator(\\\".ant-steps-item:nth-child(6) .ant-steps-item-icon\\\").click()\\n    \\n          # STEP 19-21: Navigate through different report sections using anchor links.\\n          # These clicks allow users to jump to specific sections of the report.\\n          page.locator('[href=\\\"#highlights\\\"]').click()\\n          page.locator('[href=\\\"#kpis\\\"]').click()\\n          page.locator('[href=\\\"#financials\\\"]').click()\\n    \\n          # ===== STAGE 5: NAVIGATION TO VALUATION DIRECTORY =====\\n    \\n          # GOAL: Access the Valuation Directory to view and manage existing valuations.\\n          # STEP 22: Open the main navigation menu (hamburger menu).\\n          # Note: The selector '.fa_bars_head' targets the menu toggle button.\\n          page.locator(\\\".fa_bars_head\\\").click()\\n    \\n          # STEP 23: Navigate to the Valuation Directory page.\\n          # Note: Using href selector which is reliable for navigation links.\\n          with page.expect_navigation():\\n            page.locator('.ant-menu-title-content > [href=\\\"/JumpFive/valuations\\\"]').click()\\n    \\n          # ===== STAGE 6: VALUATION SEARCH & FILTERING =====\\n    \\n          # GOAL: Search and filter valuations using date ranges and dealership selection.\\n          # STEP 24: Open the start date picker for filtering valuations.\\n          page.locator(\\\"#date_picker1\\\").click()\\n    \\n          # STEP 25: Select day 16 from the date picker calendar.\\n          # Note: The selector targets a hoverable date cell in the calendar.\\n          page.locator(\\\".ant-picker-cell-hover > .ant-picker-cell-inner\\\").click()\\n    \\n          # STEP 26: Open the end date picker for filtering valuations.\\n          page.locator(\\\"#date_picker2\\\").click()\\n    \\n          # STEP 27: Select day 18 from the end date picker calendar.\\n          # Note: The selector targets a specific hoverable date cell.\\n          page.locator(\\\".ant-picker-cell-hover:nth-child(4) > .ant-picker-cell-inner\\\").click()\\n    \\n          # STEP 28: Open the dealership selection dropdown for filtering.\\n          page.locator(\\\"#rc_select_3\\\").click()\\n    \\n          # STEP 29: Select the same dealership from the filter dropdown.\\n          # Note: This selector is brittle as it depends on the active state.\\n          page.locator(\\\".ant-select-item-option-active > .ant-select-item-option-content\\\").click()\\n    \\n          # STEP 30: Execute the search with the configured filters.\\n          # Note: The selector targets the first button in the search wrapper.\\n          page.locator(\\\".btn_wrapper_hs > button:nth-child(1)\\\").click()\\n    \\n          # STEP 31-35: Perform various scrolling operations to navigate through search results.\\n          # These scroll operations help users explore the search results and different areas of the page.\\n          page.mouse.wheel(0, 654)\\n          page.mouse.wheel(-45, 72)\\n          page.mouse.wheel(0, -22)\\n          page.mouse.wheel(286, -1362)\\n          page.mouse.wheel(0, -36)\\n    \\n          # ===== STAGE 7: PORTFOLIO MANAGEMENT =====\\n    \\n          # GOAL: Access the Portfolio Directory and create a new portfolio.\\n          # STEP 36: Open the main navigation menu again.\\n          page.locator(\\\".fa_bars_head > div:nth-child(1)\\\").click()\\n    \\n          # STEP 37: Navigate to the Portfolio Directory page.\\n          # Note: Using href selector for reliable navigation.\\n          with page.expect_navigation():\\n            page.locator('[href=\\\"/JumpFive/Portfolio/PortfolioDirectory\\\"]').click()\\n    \\n          # STEP 38: Initiate the creation of a new portfolio.\\n          # Note: The selector targets the \\\"New Portfolio\\\" button in the header.\\n          with page.expect_navigation():\\n            page.locator(\\\".header_right > button\\\").click()\\n    \\n          # STEP 39: Start the portfolio creation process by clicking \\\"Get Started\\\".\\n          # Note: The selector targets the first search card's button.\\n          with page.expect_navigation():\\n            page.locator(\\\".search_card:nth-child(1) > button\\\").click()\\n    \\n          # ===== STAGE 8: PORTFOLIO CONFIGURATION =====\\n    \\n          # GOAL: Configure the new portfolio with specific parameters and dealerships.\\n          # STEP 40: Open the dealership selection dropdown for the portfolio.\\n          page.locator(\\\"#rc_select_6\\\").click()\\n    \\n          # STEP 41: Select a specific dealership (00602) for the portfolio.\\n          # Note: Using title attribute selector which is more reliable than class-based selectors.\\n          page.locator('[title=\\\"00602\\\"]').click()\\n    \\n          # STEP 42: Scroll down to access more configuration options.\\n          page.mouse.wheel(0, 353)\\n    \\n          # STEP 43-45: Navigate through multiple configuration steps using generic button selectors.\\n          # Note: These selectors are generic and may be brittle. They target the third button in sequence.\\n          page.locator(\\\"button:nth-child(3)\\\").click()\\n          page.locator(\\\"button:nth-child(3)\\\").click()\\n          page.locator(\\\"button:nth-child(3)\\\").click()\\n    \\n          # STEP 46: Execute the search to find dealerships matching the portfolio criteria.\\n          # Note: The selector '.ant-btn' is generic but targets the primary action button.\\n          with page.expect_navigation():\\n            page.locator(\\\".ant-btn\\\").click()\\n    \\n          # STEP 47-48: Perform scrolling operations to explore the search results.\\n          page.mouse.wheel(0, 515)\\n          page.mouse.wheel(0, -1086)\\n    \\n          # STEP 49: Modify the dealership selection in the portfolio.\\n          # Note: Using title attribute selector for the selected dealership.\\n          page.locator('.ant-select-selector > [title=\\\"00602\\\"]').click()\\n    \\n          # STEP 50: Select a different dealership (00601) from the dropdown.\\n          # Note: This selector is brittle as it depends on the active state.\\n          page.locator(\\\".ant-select-item-option-active > .ant-select-item-option-content\\\").click()\\n    \\n          # STEP 51: Execute the search with the updated dealership selection.\\n          # Note: The selector targets the search icon within the search component.\\n          with page.expect_navigation():\\n            page.locator(\\\".anticon-search > svg\\\").click()\\n    \\n          # ===== STAGE 9: COMPLETION =====\\n    \\n          # GOAL: Complete the workflow and exit the application.\\n          # STEP 52: Exit the application or close the current workflow.\\n          # Note: The selector '.OSFillParent' targets an overlay or modal close button.\\n          page.locator(\\\".OSFillParent\\\").click()\\n      except Exception as e:\\n          print(f\\\"ERROR in test_complete_end_to_end_workflow: Dumping DOM for analysis.\\\")\\n          try:\\n              with open(r'/tmp/tmplatokewr/dom_on_failure.html', 'w', encoding='utf-8') as f:\\n                  f.write(page.content())\\n              print(f\\\"DOM content successfully dumped to /tmp/tmplatokewr/dom_on_failure.html\\\")\\n          except Exception as dump_error:\\n              print(f\\\"CRITICAL: Failed to dump DOM: {dump_error}\\\")\\n>         raise e\\n\\ntest_script.py:241: \\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \\ntest_script.py:96: in test_complete_end_to_end_workflow\\n    page.locator(\\\"#rc-tabs-1-tab-tab2 .ant-radio-inner\\\").click()\\n/home/shtlp_0133/Desktop/Dev_Code_Test_suite/venv/lib/python3.12/site-packages/playwright/sync_api/_generated.py:15512: in click\\n    self._sync(\\n/home/shtlp_0133/Desktop/Dev_Code_Test_suite/venv/lib/python3.12/site-packages/playwright/_impl/_locator.py:160: in click\\n    return await self._frame.click(self._selector, strict=True, **params)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/home/shtlp_0133/Desktop/Dev_Code_Test_suite/venv/lib/python3.12/site-packages/playwright/_impl/_frame.py:488: in click\\n    await self._channel.send(\\\"click\\\", locals_to_params(locals()))\\n/home/shtlp_0133/Desktop/Dev_Code_Test_suite/venv/lib/python3.12/site-packages/playwright/_impl/_connection.py:61: in send\\n    return await self._connection.wrap_api_call(\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \\n\\nself = <playwright._impl._connection.Connection object at 0x7b271d85f050>\\ncb = <function Channel.send.<locals>.<lambda> at 0x7b271c6b7740>\\nis_internal = False\\n\\n    async def wrap_api_call(\\n        self, cb: Callable[[], Any], is_internal: bool = False\\n    ) -> Any:\\n        if self._api_zone.get():\\n            return await cb()\\n        task = asyncio.current_task(self._loop)\\n        st: List[inspect.FrameInfo] = getattr(task, \\\"__pw_stack__\\\", inspect.stack())\\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\\n        self._api_zone.set(parsed_st)\\n        try:\\n            return await cb()\\n        except Exception as error:\\n>           raise rewrite_error(error, f\\\"{parsed_st['apiName']}: {error}\\\") from None\\nE           playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\\nE           Call log:\\nE             - waiting for locator(\\\"#rc-tabs-1-tab-tab2 .ant-radio-inner\\\")\\nE               - locator resolved to <span class=\\\"ant-radio-inner\\\"></span>\\nE             - attempting click action\\nE               2 \\u00d7 waiting for element to be visible, enabled and stable\\nE                 - element is visible, enabled and stable\\nE                 - scrolling into view if needed\\nE                 - done scrolling\\nE                 - <input type=\\\"radio\\\" class=\\\"ant-radio-input\\\"/> intercepts pointer events\\nE               - retrying click action\\nE               - waiting 20ms\\nE               2 \\u00d7 waiting for element to be visible, enabled and stable\\nE                 - element is visible, enabled and stable\\nE                 - scrolling into view if needed\\nE                 - done scrolling\\nE                 - <input type=\\\"radio\\\" class=\\\"ant-radio-input\\\"/> intercepts pointer events\\nE               - retrying click action\\nE                 - waiting 100ms\\nE               - waiting for element to be visible, enabled and stable\\nE               - element is not stable\\nE             54 \\u00d7 retrying click action\\nE                  - waiting 500ms\\nE                  - waiting for element to be visible, enabled and stable\\nE                  - element is visible, enabled and stable\\nE                  - scrolling into view if needed\\nE                  - done scrolling\\nE                  - <input type=\\\"radio\\\" class=\\\"ant-radio-input\\\"/> intercepts pointer events\\nE             - retrying click action\\nE               - waiting 500ms\\n\\n/home/shtlp_0133/Desktop/Dev_Code_Test_suite/venv/lib/python3.12/site-packages/playwright/_impl/_connection.py:528: TimeoutError\\n=========================== short test summary info ============================\\nFAILED test_script.py::test_complete_end_to_end_workflow - playwright._impl._...\\n============================== 1 failed in 54.25s ==============================\\n\"\n}\n"}
2025-06-24 10:29:32 | ERROR    | Frontend | error:94 | Script execution returned error | Context: {"error": "Failed to run script", "has_logs": true}
2025-06-24 10:29:32 | INFO     | Frontend | info:76 | User completed all workflow steps | Context: {"final_step": 6, "total_steps": 7}
